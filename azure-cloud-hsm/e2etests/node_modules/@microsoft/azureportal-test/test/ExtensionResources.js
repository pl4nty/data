"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.samplesExtensionStrings = exports.hubsExtension = exports.yes = exports.uploadAPackage = exports.swap = exports.stopping = exports.stop = exports.staging = exports.subscription = exports.resourceName = exports.rolesAndInstances = exports.resourceGroup = exports.production = exports.pricingTier = exports.packageString = exports.ok = exports.myResource = exports.moreInformation = exports.M = exports.name = exports.locationLabel = exports.loading = exports.dnsName = exports.environment = exports.estimatedSpend = exports.deploymentSucceeded = exports.deletingTheCloudService = exports.deletedCloudService = exports.deleteBladeTitle = exports.deleteLabel = exports.createANewResourceGroup = exports.choosePricingTier = exports.browseTitle = exports.areYouSureYouWantToStopDeployment = void 0;
exports.areYouSureYouWantToStopDeployment = "Are you sure that you want to stop '{0}' deployment '{1}'?";
exports.browseTitle = "My Resources";
exports.choosePricingTier = "Choose your pricing tier";
exports.createANewResourceGroup = "Create a new resource group";
exports.deleteLabel = "Delete";
exports.deleteBladeTitle = "What would you like to delete?";
exports.deletedCloudService = "deleted cloud service";
exports.deletingTheCloudService = "Deleting the '{0}' cloud service.";
exports.deploymentSucceeded = "Successfully deleted cloud service";
exports.estimatedSpend = "Estimated spend";
exports.environment = "Environment";
exports.dnsName = "DNS name";
exports.loading = "Loading...";
exports.locationLabel = "Location";
exports.name = "Name";
exports.M = "M";
exports.moreInformation = "More information";
exports.myResource = "My Resource";
exports.ok = "OK";
exports.packageString = "Package"; // package is a reserved keyword
exports.pricingTier = "Pricing tier";
exports.production = "Production";
exports.resourceGroup = "Resource group";
exports.rolesAndInstances = "Roles and instances";
exports.resourceName = "Resource Name";
exports.subscription = "Subscription";
exports.staging = "Staging";
exports.stop = "Stop";
exports.stopping = "Stopping";
exports.swap = "Swap";
exports.uploadAPackage = "Upload a package";
exports.yes = "Yes";
exports.hubsExtension = {
    resourceGroups: {
        deleteResourceGroupLabel: "Delete resource group",
        deletedResourceGroupLabel: "Deleted resource group",
        deletedResourceGroupDescription: "Deleted resource group",
        deletingResourceGroupLabel: "Deleting resource group",
        deletingResourceGroupDescription: "Deleting resource group",
        browse: {
            columnLabels: {
                location: "LOCATION",
                locationId: "LOCATION ID",
                name: "NAME",
                status: "STATUS",
                subscription: "SUBSCRIPTION",
                subscriptionId: "SUBSCRIPTION ID",
                resourceGroupId: "RESOURCE GROUP ID",
            },
        },
    },
};
exports.samplesExtensionStrings = {
    Engine: {
        createEngine: "Create an Engine",
        primaryEngineName: "Primary Engine Name",
        secondaryEngineName: "Secondary Engine Name",
        backupEngineName: "Backup Engine Name",
        displacement: "Displacement",
        engineNoPdl: "EngineNoPdlV1",
        enterEngineModel: "Enter engine model...",
        model: "Model",
        pricingTier: "Pricing tier (View full pricing details)",
        password: "Password",
    },
    Robots: "Robots",
    SamplesBlade: {
        bladeWithToolbar: "Blade with toolbar",
        checkBoxBladeTitle: "Check Box | Standard Check Box",
    },
    BladeWithToolbar: {
        commands: {
            save: "Save",
        },
        bladeDialogs: {
            saveFile: "Save File",
            filename: "Filename",
        },
        title: "Blade with toolbar",
    },
    EditorBlade: {
        title: "Editor",
    },
    EssentialsBlade: {
        title: "Default Essentials",
    },
    PricingTierBlade: {
        title: "Pricing tier",
    },
    HelloWorldReactView: {
        root: "Hello, World!",
        title: "Hello, World!",
    },
    CreateCustomRobotReactView: {
        title: "Simple create",
    },
    CreateExperienceReactView: {
        title: "Tabbed create",
        subtitle: "React Sample",
    },
    NotFoundReactView: {
        title: "Not found",
        error: "Not found",
    },
    OpensContextPaneReactView: {
        contextPaneLink: "Context pane with default width",
        title: "Opening a context pane",
    },
    OpensViewReactView: {
        helloWorldLink: "Hello, World!",
        root: "Press the link below to open a React View.\nHello, World!",
        title: "Opening a view",
    },
    PinnableReactView: {
        title: "Pinnable",
        pinTitle: "Simple Template Part",
    },
};
//# sourceMappingURL=ExtensionResources.js.map