"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const By_1 = require("../Locators/By");
const PortalElement_1 = require("../PortalElement");
/**
 * Represents an item in a ContextMenu.
 */
class ContextMenuItem extends PortalElement_1.default {
    /**
     * Gets the locator associated to this element.
     *
     * @returns A Locator instance.
     */
    get locator() {
        return By_1.default.className("fxs-contextMenu-item");
    }
    /**
     * Returns a value that indicates whether the ContextMenuItem is displayed and in enabled state.
     *
     * @returns A promise that resolves with a value that indicates whether the ContextMenuItem is displayed and in enabled state.
     */
    async isEnabled() {
        const values = await Promise.all([
            this.isDisplayed(),
            this.doesNotHaveAttributeValue("class", "fxs-contextMenu-itemDisabled"),
        ]);
        return values[0] && values[1];
    }
    /**
     * Builds a ContextMenu locator using the specified options.
     *
     * @param options The options used to build the locator.
     * @returns A Locator instance.
     */
    buildLocator(options) {
        return options.text ? By_1.default.content(this.locator, By_1.default.text(options.text)) : this.locator;
    }
    /**
     * Whether context menu item has the expected text (case insensitive) and is enabled.
     *
     * @param itemText text to check if present in context menu item.
     */
    async hasExpectedTextAndIsEnabled(itemText) {
        return (await this.getText()) === itemText && (await this.isEnabled());
    }
}
exports.default = ContextMenuItem;
//# sourceMappingURL=ContextMenuItem.js.map