"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Locator_1 = require("./Locator");
const Logger_1 = require("../Logger");
/**
 * Represents a Locator that is based on a single webdriver.Locator or webdriver.promise.Promise.
 */
class SimpleLocator extends Locator_1.default {
    /**
     * Creates a new instance of this class.
     *
     * @param locator The locator strategy to use when searching for elements.
     */
    constructor(locator) {
        super();
        /**
         * Schedules a command to search for multiple elements on the page.
         *
         * @param {IBrowserAutomation | IBrowserElement} context The object used as a starting point for the search.
         * @returns An array of the webdriver.WebElement objects that were found.
         */
        this.findElements = async (context, waitUntilLocated, timeout) => {
            try {
                if (context === null) {
                    Logger_1.default.warning("SimpleLocator.findElements was given a null context");
                }
                return await context.findElements(this.locator, waitUntilLocated, timeout);
            }
            catch (error) {
                if (error.name && error.name === "StaleElementReferenceError") {
                    Logger_1.default.warning(`StaleElementReferenceError caught at SimpleLocator.findElements.`);
                    return null;
                }
                throw error;
            }
        };
        this.locator = locator;
    }
    /**
     * Gets the string representation of this locator.
     *
     * @returns The string representation of this locator.
     */
    toString() {
        return this.locator.toString();
    }
}
exports.default = SimpleLocator;
//# sourceMappingURL=SimpleLocator.js.map