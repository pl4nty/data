"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SvgElement = void 0;
const By_1 = require("../Locators/By");
const PortalElement_1 = require("../PortalElement");
const BrowserAutomation_1 = require("../BrowserAutomation");
/**
 * Web element which represents an SVG element.
 */
class SvgElement extends PortalElement_1.default {
    constructor() {
        super(...arguments);
        this.svgTagName = "svg";
        this.titleTagName = "title";
    }
    /**
     * Gets the locator associated to this element.
     *
     * @returns A Locator instance.
     */
    get locator() {
        return By_1.default.tagName(this.svgTagName);
    }
    /**
     * @deprecated hasTitle getter has been deprecated. Please use instance method hasTitleAsync instead.
     */
    get hasTitle() {
        const title = this.element(By_1.default.tagName(this.titleTagName));
        if (title) {
            return true;
        }
    }
    /**
     * Gets a value indicating whether the SVG has a title or not.
     */
    async hasTitleAsync() {
        let title;
        return await (0, BrowserAutomation_1.getBrowser)().wait(async () => {
            title = this.element(By_1.default.tagName(this.titleTagName));
            return await title.isDisplayed();
        });
    }
    /**
     * Gets the title if present.
     *
     * @returns The title marker if present else null.
     */
    async getTitle() {
        // Get the elements with the title ID.
        const title = this.all(By_1.default.tagName(this.titleTagName));
        if ((await title.count()) <= 0) {
            return null;
        }
        return await title.first().getText();
    }
}
exports.SvgElement = SvgElement;
//# sourceMappingURL=SvgElement.js.map