"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const PortalElement_1 = require("../../PortalElement");
const By_1 = require("../../Locators/By");
/**
 * Driver class for the ToolbarItem portal control
 */
class ToolbarItem extends PortalElement_1.default {
    constructor() {
        super(...arguments);
        this.rootClassName = "azc-toolbar-item";
        this.disabledClassName = "azc-toolbarItem-disabled";
        this.toolbarItemText = "azc-toolbarButton-label";
    }
    /**
     * Gets the locator associated to this element.
     *
     * @returns A Locator instance.
     */
    get locator() {
        return By_1.default.className(this.rootClassName);
    }
    buildLocator(options) {
        return By_1.default.xpath(`//*[contains(@class, "${this.rootClassName}") and descendant::*[contains(@class, "${this.toolbarItemText}") and contains("${options.text}",text())]]`);
    }
    /**
     * Gets a value indicating whether the toolbar item is enabled.
     */
    async isEnabled() {
        const classes = await this.getAttribute("class");
        return !classes.includes(this.disabledClassName);
    }
    /**
     * Gets the label text of the toolbar item.
     */
    get text() {
        return async () => {
            const textElement = this.element(By_1.default.className(this.toolbarItemText));
            const text = await textElement.getAttribute("innerText");
            return text ? text : "";
        };
    }
}
exports.default = ToolbarItem;
//# sourceMappingURL=ToolbarItem.js.map