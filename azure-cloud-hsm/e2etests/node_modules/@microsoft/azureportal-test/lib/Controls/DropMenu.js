"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DropMenu = void 0;
const By_1 = require("../Locators/By");
const PortalElement_1 = require("../PortalElement");
class DropMenu extends PortalElement_1.default {
    constructor() {
        super(...arguments);
        this.rootClassName = "fxs-dropmenu";
        this.dropMenuButtonClassName = "fxs-dropmenu-button";
        this.dropMenuIsOpenClassName = "fxs-dropmenu-is-open";
        this.dropMenuContentClassName = "fxs-dropmenu-content";
    }
    /**
     * Gets the locator associated to this element.
     *
     * @returns A Locator instance.
     */
    get locator() {
        return By_1.default.className(this.rootClassName);
    }
    /**
     * Gets a value indicating whether the dropmenu is opened.
     */
    async isOpened() {
        return await this.element(By_1.default.className(this.dropMenuContentClassName)).hasClass(this.dropMenuIsOpenClassName);
    }
    /**
     * Opens the dropmenu if it isn't already opened.
     */
    async open() {
        const isOpened = await this.isOpened();
        if (!isOpened) {
            await this.findDropMenuButton().click();
        }
    }
    /**
     * Finds the dropmenu button.
     */
    findDropMenuButton() {
        return this.element(By_1.default.className(this.dropMenuButtonClassName));
    }
}
exports.DropMenu = DropMenu;
//# sourceMappingURL=DropMenu.js.map