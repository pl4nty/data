"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const PortalElement_1 = require("../PortalElement");
const By_1 = require("../Locators/By");
const Constants_1 = require("../Constants");
const EssentialsItemProperty_1 = require("./EssentialsItemProperty");
const essentialsItem = `.${Constants_1.CssClassNames.Controls.essentialsItem}`;
const essentialsMove = `.${Constants_1.CssClassNames.Controls.essentialsMove}`;
/**
 * Represents an Essentials Item.
 */
class EssentialsItem extends PortalElement_1.default {
    constructor() {
        super(...arguments);
        /**
         * The essentials item properties.
         */
        this.properties = this.all(EssentialsItemProperty_1.default);
    }
    /**
     * Gets the locator associated to this element.
     *
     * @returns A Locator instance.
     */
    get locator() {
        return By_1.default.css(essentialsItem);
    }
    /**
     * Gets the item label text.
     *
     * @returns A promise that resolves with the label text of the item.
     */
    async getLabelText() {
        return await this.element(By_1.default.tagName("label")).getText();
    }
    /**
     * Gets whether the item has move resource blade or not.
     *
     * @returns A promise that resolves with whether the item has move resource blade or not.
     */
    async hasMoveResource() {
        const count = await this.all(By_1.default.css(essentialsMove)).count();
        return count > 0;
    }
    /**
     * Gets the item's side.
     *
     * @returns A promise that resolves with the side of the item.
     */
    async getSide() {
        return await this.getAttribute("data-side");
    }
    /**
     * Returns an element of matching property value.
     *
     * @param value The string to match property element value.
     * @returns An element of matching property value.
     */
    async getPropertyElementByValue(value) {
        const propValuesPromise = await this.properties.map((property) => property.asType(EssentialsItemProperty_1.default).getValue());
        const propValues = await Promise.all(propValuesPromise);
        let ret = null;
        for (let i = 0; i < propValues.length; i++) {
            if (propValues[i] === value) {
                ret = this.properties.get(i);
                break;
            }
        }
        return ret;
    }
}
exports.default = EssentialsItem;
//# sourceMappingURL=EssentialsItem.js.map