"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Blade_1 = require("./Blade");
const portalFxResources = require("../PortalFxResources");
const By_1 = require("../Locators/By");
const Controls_1 = require("../Controls");
class AllResourcesBlade extends Blade_1.default {
    get locator() {
        return super.buildLocator({ title: portalFxResources.hubsExtension.allResourcesBlade.allResourcesBladeTitle });
    }
    /**
     * Returns The Subscription Summary Element.
     */
    async getSubscriptionSummaryLink() {
        const subscriptionSummaryLink = this.element(By_1.default.className("fxc-resourcefilter-subscriptionsummary"));
        if (subscriptionSummaryLink) {
            return subscriptionSummaryLink;
        }
        throw new Error("Subscription summary link not found");
    }
    /**
     * Returns the grid on AllResourcesBlade
     *
     * @returns an instance of Grid class wrapped in a promise
     */
    async getAllResourcesBladeGrid() {
        const allResourcesBladeGrid = this.element(Controls_1.Grid);
        if (allResourcesBladeGrid) {
            return allResourcesBladeGrid;
        }
        throw new Error("All resources grid not found on on AllResourcesBlade.");
    }
    /**
     * Returns the data grid on AllResourcesBlade
     *
     * @returns an instance of Grid class wrapped in a promise
     */
    async getAllResourcesBladeDataGrid() {
        const allResourcesBladeDataGrid = this.element(Controls_1.DataGrid);
        if (allResourcesBladeDataGrid) {
            return allResourcesBladeDataGrid;
        }
        throw new Error("All resources data grid not found on on AllResourcesBlade.");
    }
    /**
     * Gets Resource filter on "All resources" Blade.
     *
     * @returns an instance of ResourceFilter class wrapped in a promise
     */
    async getResourceFilter() {
        const resourceFilter = this.element(Controls_1.ResourceFilter);
        if (resourceFilter) {
            return resourceFilter;
        }
        throw new Error("resource filter not found on AllResourcesBlade");
    }
}
exports.default = AllResourcesBlade;
//# sourceMappingURL=AllResourcesBlade.js.map