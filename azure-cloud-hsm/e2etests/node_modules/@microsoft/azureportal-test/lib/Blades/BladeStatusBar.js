"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const By_1 = require("../Locators/By");
const PortalElement_1 = require("../PortalElement");
const ContentState_1 = require("./ContentState");
const Constants = require("../Constants");
/**
 * Represents the Status Bar in a blade.
 */
class BladeStatusBar extends PortalElement_1.default {
    /**
     * Gets the locator associated to this element.
     *
     * @returns A Locator instance.
     */
    get locator() {
        return By_1.default.className(Constants.CssClassNames.Blades.bladeStatusBar);
    }
    /**
     * Gets the state of the statusBar.
     */
    async getContentState() {
        let state = ContentState_1.ContentState.None;
        const statusBarTextContainer = this.element(By_1.default.className(Constants.CssClassNames.Controls.infoBoxContainer));
        const classText = await statusBarTextContainer.getAttribute("class");
        const contentStateClass = classText
            .split(" ")
            .find((className) => className.startsWith(Constants.CssClassNames.Controls.infoBoxStylePrefix) &&
            className !== Constants.CssClassNames.Controls.infoBoxContainer);
        switch (contentStateClass) {
            case Constants.CssClassNames.Controls.infoBoxStylePrefix + "Success":
                state = ContentState_1.ContentState.Complete;
                break;
            case Constants.CssClassNames.Controls.infoBoxStylePrefix + "Warning":
                state = ContentState_1.ContentState.Warning;
                break;
            case Constants.CssClassNames.Controls.infoBoxStylePrefix + "Error":
                state = ContentState_1.ContentState.Error;
                break;
            case Constants.CssClassNames.Controls.infoBoxStylePrefix + "Info":
                state = ContentState_1.ContentState.Info;
                break;
            case Constants.CssClassNames.Controls.infoBoxStylePrefix + "Upsell":
                state = ContentState_1.ContentState.Upsell;
                break;
        }
        return state;
    }
}
exports.default = BladeStatusBar;
//# sourceMappingURL=BladeStatusBar.js.map