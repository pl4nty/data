"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Templates used for styling/layout regression detection
 */
class PortalRegressionDetectionTemplates {
}
/**
 * Powershell script to be download from the diff HTML page, used to promote latest screenshot to LKG
 */
PortalRegressionDetectionTemplates.PromoteToLKGPowershellScript = `
    # Azure subscription-specific variables.
    $storageAccountName = "{2}"
    $subscriptionId = "{3}"
    $resourcegroup = "{4}"
    $containerName = "cicss"

    $azureAccount = Login-AzureRmAccount

    write-host "Logged in as '$($azureAccount.Context.Account.Id)' ... "

    $subscription = (Get-AzureRmSubscription).Where({$_.SubscriptionId -eq $subscriptionId})

    if (-not $subscription) {
        write-host "Can't access subscription '$($subscriptionId)'"
        exit
    }

    write-host "Subscription access granted."

    Set-AzureRmContext -SubscriptionId $subscriptionId

    Set-AzureRmCurrentStorageAccount -StorageAccountName $storageAccountName -ResourceGroupName $resourcegroup

    write-host "Checking storage container '$($containerName)' in storage account '$($storageAccountName)' ..."
    try {
        $container = Get-AzureStorageContainer -Name $containerName
    }
    catch [Microsoft.WindowsAzure.Commands.Storage.Common.ResourceNotFoundException] {
        write-host "Storage container '$($containerName)' does not exist, creating it ..."
        New-AzureStorageContainer -Name $containerName -Permission Blob
    }

    # Upload build to the storage container
    write-host "Uploading [{0}] to storage container '$containerName' ..."
    try {
        # Single quotes here because of '<img src="..."'
        $newLKG = '{1}'
        $rand = get-random
        $archivedLKGBlobName = "ARCHIVE_{0}" -replace ".html", ".$(get-Date -UFormat '%s').html"
        new-item "newLKG$($rand).html" -type file -force -value $newLKG
        Get-AzureStorageBlobContent -Container $containerName -Blob "{0}"
        Set-AzureStorageBlobContent -Container $containerName -File "newLKG$($rand).html" -Blob "{0}" -Force:$Force
        Set-AzureStorageBlobContent -Container $containerName -File "{0}" -Blob $archivedLKGBlobName -Force:$Force
        write-host "Successfully uploaded [{0}] to storage container '$containerName'!"
        Remove-item "newLKG$($rand).html"
        Remove-item "{0}"
    }
    catch {
        throw "There was an error uploading [{0}] to storage: $($_.Exception.Message)"
    }
    read-host -Prompt "Press Enter to exit"`;
/**
 * HTML diff template to show the difference between the latest and LKG screenshots
 */
PortalRegressionDetectionTemplates.HTMLDiffTemplate = `
    <html>
        <head>
            <style>
                img {border: solid 10px limegreen;}
                .img2 { animation: mpulse 2s infinite; }
                .img2 img {border-color: red;}
                @keyframes mpulse { 0% { opacity: 1; } 1% { opacity: 0; } 50% { opacity: 0; } 51% { opacity: 1; } }
                div { position: absolute; }
                span {
                    background-color: white; display: block; text-align: center; font-size: 36px; line-height: normal;
                    font-family: az_ea_font,wf_segoe-ui_normal,"Segoe UI","Segoe WP",Tahoma,Arial,sans-serif;
                }
            </style>
        </head>
        <body>
            <a href="" download="promote.ps1">Promote Latest to LKG</a>
            <div><span>LKG</span>{0}</div>
            <div class="img2"><span>Latest</span>{1}</div>
            <script>
                document.getElementsByTagName("a")[0].download = "promote_" + Math.random().toString(36).substr(2, 10) + ".ps1_";
                document.getElementsByTagName("a")[0].href = "data:text/json;charset=utf-8," + encodeURIComponent(\`{2}\`);
            </script>
        </body>
    </html>`;
exports.default = PortalRegressionDetectionTemplates;
//# sourceMappingURL=PortalRegressionDetectionTemplates.js.map