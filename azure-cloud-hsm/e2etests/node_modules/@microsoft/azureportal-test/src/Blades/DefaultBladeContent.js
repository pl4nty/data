"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const By_1 = require("../Locators/By");
const PartContainer_1 = require("../Parts/PartContainer");
const ResourceSummary_1 = require("./ResourceSummary");
const BrowserAutomation_1 = require("../BrowserAutomation");
const Constants_1 = require("../Constants");
/**
 * Represents the default content of the blade.
 */
class DefaultBladeContent extends PartContainer_1.PartContainer {
    constructor() {
        super(...arguments);
        this.widthClassPrefix = "fxs-bladesize-";
    }
    /**
     * Gets the locator associated to this element.
     *
     * @returns A Locator instance.
     */
    get locator() {
        return By_1.default.className("fxs-blade-content-container-default");
    }
    /**
     * finds the resource summary element.
     */
    async findResourceSummary() {
        return this.element(ResourceSummary_1.default);
    }
    /**
     * Gets the blade width.
     *
     * @returns enum object of blade width.
     */
    async getWidth() {
        const widthClass = await (0, BrowserAutomation_1.getBrowser)().wait(async () => {
            const attributes = (await this.getAttribute("class")).split(" ");
            return attributes.find((c) => c.toLowerCase().startsWith(this.widthClassPrefix));
        }, null, "Could not find the blade's size class.");
        const width = widthClass.replace(this.widthClassPrefix, "");
        let val = null;
        for (const key in Constants_1.BladeWidth) {
            const isValueProperty = parseInt(key, 10) >= 0;
            if (isValueProperty) {
                if (Constants_1.BladeWidth[key].toLowerCase() === width.toLowerCase()) {
                    val = Constants_1.BladeWidth[key];
                }
            }
        }
        const enumValue = Constants_1.BladeWidth[val];
        return enumValue;
    }
}
exports.default = DefaultBladeContent;
//# sourceMappingURL=DefaultBladeContent.js.map