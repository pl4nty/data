"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const By_1 = require("../Locators/By");
const PortalElement_1 = require("../PortalElement");
const String = require("../Utils/String");
const BrowserAutomation_1 = require("../BrowserAutomation");
const Button_1 = require("./Button");
/**
 *  Represents a Message Box.
 */
class MessageBox extends PortalElement_1.default {
    constructor() {
        super(...arguments);
        this.rootClassName = "fxs-messagebox";
        this.titleViewModelProperty = "title";
    }
    /**
     * Gets the locator associated to this element.
     *
     * @returns {Locator} A Locator instance.
     */
    get locator() {
        return By_1.default.className(this.rootClassName);
    }
    /**
     * Gets the message box title.
     */
    async getTitle() {
        const selector = String.format("[data-bind*={0}]", this.titleViewModelProperty);
        return await this.element(By_1.default.css(selector)).getText();
    }
    /**
     * Clicks the message box button with the specified command text.
     *
     * @param buttonText The text of the message box button to click.
     */
    async clickButton(buttonText) {
        const button = await (0, BrowserAutomation_1.getBrowser)().wait(async () => {
            const buttonLocator = new Button_1.default().buildLocator({ text: buttonText });
            return this.element(buttonLocator).asType(Button_1.default);
        }, null, `Could not find the ${buttonText} button in the active message box`);
        await button.click();
    }
}
exports.default = MessageBox;
//# sourceMappingURL=MessageBox.js.map