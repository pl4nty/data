"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CssClassNames = exports.BrowserOperations = exports.BladeWidth = exports.SplashScreenDialogType = exports.ControlValidationState = void 0;
/**
 * enum to represent the validation state of a control
 */
var ControlValidationState;
(function (ControlValidationState) {
    ControlValidationState[ControlValidationState["invalid"] = 1] = "invalid";
    ControlValidationState[ControlValidationState["none"] = 2] = "none";
    ControlValidationState[ControlValidationState["pending"] = 3] = "pending";
    ControlValidationState[ControlValidationState["valid"] = 4] = "valid";
})(ControlValidationState || (exports.ControlValidationState = ControlValidationState = {}));
/**
 * enum to represent the type of splash screen dialog
 */
var SplashScreenDialogType;
(function (SplashScreenDialogType) {
    SplashScreenDialogType[SplashScreenDialogType["extension"] = 0] = "extension";
    SplashScreenDialogType[SplashScreenDialogType["patch"] = 1] = "patch";
})(SplashScreenDialogType || (exports.SplashScreenDialogType = SplashScreenDialogType = {}));
/**
 * enum to represent blade width
 */
var BladeWidth;
(function (BladeWidth) {
    BladeWidth[BladeWidth["Small"] = 0] = "Small";
    BladeWidth[BladeWidth["Medium"] = 1] = "Medium";
    BladeWidth[BladeWidth["Large"] = 2] = "Large";
    BladeWidth[BladeWidth["XLarge"] = 3] = "XLarge";
})(BladeWidth || (exports.BladeWidth = BladeWidth = {}));
/**
 * enum to represent Browser Operations
 */
var BrowserOperations;
(function (BrowserOperations) {
    BrowserOperations["openDebugHub"] = "fxopendebughub";
    BrowserOperations["saveSettings"] = "save";
    BrowserOperations["clearSettings"] = "clear";
})(BrowserOperations || (exports.BrowserOperations = BrowserOperations = {}));
/**
 * Css Class Names that can be used in locators
 */
exports.CssClassNames = {
    ActionBars: {
        FilterActionBar: {
            control: ".fxc-filterActionBar",
            resetButton: ".fxc-filterActionBar-resetButton",
            updateButton: ".fxc-filterActionBar-updateButton",
        },
    },
    Blades: {
        bladeContentProgress: "fxs-bladecontent-progress",
        bladeLoadingStatus: "fxs-blade-loading-status",
        bladeProgress: "fxs-blade-progress",
        bladeProgressBar: "fxs-blade-progress-translucent",
        bladeStatusBar: "fxs-blade-status-container",
        bladeErrorContent: "fxs-blade-errorcontent",
    },
    Controls: {
        buttonDisabled: "fxs-button-disabled",
        copyableLabel: "fxc-copyablelabel",
        copyableLabelCopyButton: "fxc-copyablelabel-copybutton",
        editor: "fxc-editor",
        editableCombo: "azc-editableCombo",
        editableComboDropImage: "azc-editableCombo-drop-image",
        essentials: "fxc-essentials",
        essentialsAccordion: "fxc-essentials-accordion-toggle",
        essentialsItem: "fxc-essentials-item",
        essentialsLabel: "fxc-essentials-label-container",
        essentialsMove: "fxc-essentials-move",
        essentialsValue: "fxc-essentials-value",
        essentialsValueContainer: "fxc-essentials-value-container",
        essentialsViewAllButton: "fxc-essentials-viewall-button",
        essentialsViewAllContainer: "fxc-essentials-viewall-button-container",
        filterComboField: "azc-filterComboField",
        infoBox: "fxc-infobox",
        infoBoxContainer: "fxc-infoBox-container",
        infoBoxSizePrefix: "fxc-infobox-size-",
        infoBoxStylePrefix: "fxc-infoBox-",
        inputField: "azc-input",
        optionsGroupField: "azc-optionsGroupField",
        edited: "azc-is-edited",
        ValidationState: {
            invalid: "azc-validatableControl-invalid",
            none: "azc-validatableControl-none",
            pending: "azc-validatableControl-pending",
            valid: "azc-validatableControl-valid-validated",
        },
        pillList: "fxc-pilllist",
        pillListContainer: "fxc-pilllist-container",
        pillListItem: "fxc-pilllist-item",
        pillListOverflowItem: "fxc-pilllist-overflowitem",
        pillListActionButton: "fxc-pilllist-action-image",
        monitorChart: "fxc-monitorchartv2",
        monitorChartMetric: "fxc-monitorchart-metric",
        monitorChartValue: "fxc-monitorchart-value",
        monitorChartUnit: "fxc-monitorchart-unit",
        monitorChartData: "fxc-monitorchart-timeSeriesPoints",
        recommendations: "fxc-recommendations",
        summaryTitle: "fxc-summary-part-title",
        summaryItemLabel: "fxc-summary-item fxc-summary-label",
        summaryItemValue: "fxc-summary-item fxc-summary-item-value",
    },
    Forms: {
        formControl: "azc-formControl",
        disabledState: "azc-control-disabled",
        dropDownFocusClass: ".fxs-br-primary",
    },
    Grids: {
        gridHeader: "azc-grid-headerlabel",
        rowCount: "aria-rowcount",
    },
    Parts: {
        collectionPart: "fxs-part-collectionpart",
        collectionPartRollupCount: "fxs-part-collectionpart-rollup-count",
        collectionPartRollupLabel: "fxs-part-collectionpart-rollup-label",
        collectionPartHasMoreData: "fxs-part-collectionpart-more-data",
        collectionPartTitle: "fxs-part-title",
        collectionSummary: "fxs-part-collectionsummary",
        collectionSummaryCount: "fxs-part-collectionsummary-count",
        collectionSummaryTitle: "fxs-part-title",
        errorPart: "fxs-errorpart",
        errorPartIcon: "fxs-part-error-icon",
        errorPartReason: "fxs-part-error-reason",
        propertiesPart: "fxs-part-properties",
    },
    SearchMenu: {
        clearElement: "fxs-search-clear",
        dropMenu: "fxs-search-activated",
        mruItems: "fxs-menu-mru",
        noResults: "fxs-menu-no-results",
        resultDetails: "fxs-menu-result-details",
        resultSubName: "fxs-menu-result-subName",
        resultTitle: "fxs-menu-result-name",
        resultType: "fxs-menu-result-type",
        searchBoxIcon: "fxs-search-icon-mini",
        searchCategories: "fxs-async-searchmenu-result-category",
        searchFlyout: "fxs-search-menu",
        searchMenu: "fxs-topbar-search",
        searchResults: "fxs-search-menu",
    },
    attributes: {
        ariaCurrentItemClassName: "aria-current",
        ariaExpandedItemClassName: "aria-expanded",
        ariaSelectedItemClassName: "aria-selected",
    },
    AvatarMenu: {
        avatarMenu: "fxs-topbar-avatarmenu",
    },
    Debugbox: {
        stickyDebugBox: "fxs-sticky-debugbox",
    },
};
//# sourceMappingURL=Constants.js.map