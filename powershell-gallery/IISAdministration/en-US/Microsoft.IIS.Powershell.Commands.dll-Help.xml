<?xml version="1.0" encoding="utf-8"?>
<helpItems xmlns="http://msh" schema="maml">

<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Clear-IISCentralCertProvider</command:name>
<command:verb>Clear</command:verb>
<command:noun>IISCentralCertProvider</command:noun>
<maml:description><maml:para>Removes configuration information from the IIS central certificate store.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Clear-IISCentralCertProvider cmdlet removes all settings for the central certificate provider. You must specify the Force parameter if the Central Certificate Store feature is enabled. If you specify Force , the feature is disabled and all the settings are cleared. If the Central Certificate Store feature is already disabled, you do not need to specify Force .
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Clear-IISCentralCertProvider</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Force</maml:name>
<maml:Description><maml:para>Forces the command to run without asking for user confirmation.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Force</maml:name>
<maml:Description><maml:para>Forces the command to run without asking for user confirmation.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name> </maml:name>
</dev:type>
<maml:description><maml:para>Clear-IISCentralCertProvider does not accept pipelined input.
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name> </maml:name>
</dev:type>
<maml:description><maml:para>Clear-IISCentralCertProvider does not return any objects.
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Clear configuration information from the IIS certificate store</maml:title>
<dev:code>PS C:\&gt; Clear-IISCentralCertProvider</dev:code>
<dev:remarks><maml:para>This command removes all the configuration information for the IIS central certificate store without removing the provider itself.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Disable-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-IISCentralCertProviderCredential</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Clear-IISConfigCollection</command:name>
<command:verb>Clear</command:verb>
<command:noun>IISConfigCollection</command:noun>
<maml:description><maml:para>Clears an IIS configuration collection.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Clear-IISConfigCollection cmdlet clears a given Internet Information Services (IIS) collection by removing all the elements and putting a clear tag, which is generally &lt;clear&gt;. This prevents from the collection to inherit collection elements from higher levels, if any.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Clear-IISConfigCollection</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>ConfigCollection</maml:name>
<maml:Description><maml:para>Specifies the ConfigurationCollection object for which the collection elements will be cleared. If a ConfigurationCollection is previously obtained and assigned to a variable, you cannot pass it to this cmdlet through the pipeline because the pipeline engine will try to enumerate, passing ConfigurationElement objects instead. Try either passing the whole Get-IISConfigCollection cmdlet into the pipeline or use it as a parameter for correct results.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ConfigurationElementCollection</command:parameterValue>
<dev:type><maml:name>ConfigurationElementCollection</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>ConfigCollection</maml:name>
<maml:Description><maml:para>Specifies the ConfigurationCollection object for which the collection elements will be cleared. If a ConfigurationCollection is previously obtained and assigned to a variable, you cannot pass it to this cmdlet through the pipeline because the pipeline engine will try to enumerate, passing ConfigurationElement objects instead. Try either passing the whole Get-IISConfigCollection cmdlet into the pipeline or use it as a parameter for correct results.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ConfigurationElementCollection</command:parameterValue>
<dev:type><maml:name>ConfigurationElementCollection</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.Web.Administration.ConfigurationElementCollection</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues></command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Clear the defaultDocument settings for Default Web Site, which inherits from Server level and defined in applicationHost.config.</maml:title>
<dev:code>PS C:\&gt; Get-IISConfigSection -SectionPath "system.webServer/defaultDocument" -CommitPath "Default Web Site" | Get-IISConfigCollection -CollectionName "files" | Clear-IISConfigCollection -Confirm:$False</dev:code>
<dev:remarks><maml:para>This command adds lines in web.config which is the configuration file of Default Web Site.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Get-IISConfigCollection</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>IIS Administration Cmdlets for Windows PowerShell</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Disable-IISCentralCertProvider</command:name>
<command:verb>Disable</command:verb>
<command:noun>IISCentralCertProvider</command:noun>
<maml:description><maml:para>Disables the IIS central certificate store.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Disable-IISCentralCertProvider cmdlet disables the IIS central certificate store. The central certificate store allows you to store all your IIS certificates in a centralized location (such as a file share); IIS servers then retrieve certificate from this centralized location. That means that you only have to install certificates in one location; there is no need to install the same certificate on each and every IIS server. If you disable the central certificate store then you will need to install certificates on all of your servers.
</maml:para>
<maml:para>If the certificate store has been disabled you can re-enable it at any time by running the Enable-IISCentralCertProvider cmdlet.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Disable-IISCentralCertProvider</maml:name>
</command:syntaxItem>
</command:syntax>
<command:parameters></command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name> </maml:name>
</dev:type>
<maml:description><maml:para>Disable-IISCentralCertProvider does not accept pipelined input.
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name> </maml:name>
</dev:type>
<maml:description><maml:para>Disable-IISCentralCertProvider does not return any objects.
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1</maml:title>
<dev:code>PS C:\&gt; Disable-IISCentralCertProvider</dev:code>
<dev:remarks><maml:para>This command disables the central certificate store. Note that no parameters are required when calling Disable-IISCentralCertProvider . Note, too that you will not be asked to confirm whether you want to disable the central store. Instead, the store will automatically be disabled when you run this command.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Clear-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-IISCentralCertProviderCredential</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Disable-IISSharedConfig</command:name>
<command:verb>Disable</command:verb>
<command:noun>IISSharedConfig</command:noun>
<maml:description><maml:para>Disables IIS shared configuration.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Disable-IISSharedConfig cmdlet disables the IIS shared configuration feature, and reverts to the keys that were backed up when shared configuration was enabled. IIS also reverts to the local applicationHost.config file that was used before shared configuration was enabled.
</maml:para>
<maml:para>You can enable shared configuration through the IIS Administration Manager UI or the Enable-IISSharedConfig cmdlet.
</maml:para>
<maml:para>If there are no backup keys for any reason, the cmdlet fails with a warning. To disable shared configuration in this scenario, you can use the DontRestoreBackedUpKeys parameter.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Disable-IISSharedConfig</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>CopyRemoteConfigToLocalFiles</maml:name>
<maml:Description><maml:para>Copies remote configuration over the local version of applicationHost.config before disabling shared configuration.
</maml:para>
<maml:para>The version of the applicationHost.config file that was used before enabling shared configuration is overwritten. The backup keys are also deleted, because those keys would only work with the overwritten version of applicationHost.config.
</maml:para>
<maml:para>IIS continues to use the active keys that worked with shared configuration, which is now the local configuration.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>DontRestoreBackedUpKeys</maml:name>
<maml:Description><maml:para>Indicates that this operation does not restore backed up keys. If you do not specify the CopyRemoteConfigToLocalFiles parameter, IIS reverts to using its local copy of applicationHost.config, and uses the active keys for the shared configuration.
</maml:para>
<maml:para>If the local copy of the applicationHost.config file had secrets encrypted with keys other than the currently active ones, IIS will no longer be able to decrypt those secrets. You must re-enter and re-encrypt these secrets for the features that depend on them. DontRestoreBackedUpKeys is useful in scenarios where backup keys are deleted but the IIS administrator wants to disable shared configuration.
</maml:para>
<maml:para>This parameter is ignored if you specify the CopyRemoteConfigToLocalFiles parameter, because the backed up keys are not restored in that case. In any circumstance, backed up keys are deleted when a shared configuration is disabled.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>CopyRemoteConfigToLocalFiles</maml:name>
<maml:Description><maml:para>Copies remote configuration over the local version of applicationHost.config before disabling shared configuration.
</maml:para>
<maml:para>The version of the applicationHost.config file that was used before enabling shared configuration is overwritten. The backup keys are also deleted, because those keys would only work with the overwritten version of applicationHost.config.
</maml:para>
<maml:para>IIS continues to use the active keys that worked with shared configuration, which is now the local configuration.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>DontRestoreBackedUpKeys</maml:name>
<maml:Description><maml:para>Indicates that this operation does not restore backed up keys. If you do not specify the CopyRemoteConfigToLocalFiles parameter, IIS reverts to using its local copy of applicationHost.config, and uses the active keys for the shared configuration.
</maml:para>
<maml:para>If the local copy of the applicationHost.config file had secrets encrypted with keys other than the currently active ones, IIS will no longer be able to decrypt those secrets. You must re-enter and re-encrypt these secrets for the features that depend on them. DontRestoreBackedUpKeys is useful in scenarios where backup keys are deleted but the IIS administrator wants to disable shared configuration.
</maml:para>
<maml:para>This parameter is ignored if you specify the CopyRemoteConfigToLocalFiles parameter, because the backed up keys are not restored in that case. In any circumstance, backed up keys are deleted when a shared configuration is disabled.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes></command:inputTypes>
<command:returnValues></command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Disable shared configuration and restore keys</maml:title>
<dev:code>PS C:\&gt; Disable-IISSharedConfig</dev:code>
<dev:remarks><maml:para>This command disables shared configuration. IIS subsequently uses the local applicationHost.config file in %WINDIR%\config. The backed up keys are restored to the local key store and deleted.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Disable shared configuration without restoring keys</maml:title>
<dev:code>PS C:\&gt; Disable-IISSharedConfig -DontRestoreBackedUpKeys</dev:code>
<dev:remarks><maml:para>This command disables shared configuration. IIS subsequently uses the local applicationHost.config file in %WINDIR%\config. The backed up keys are deleted and are not restored.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 3: Disable shared configuration and use it locally</maml:title>
<dev:code>PS C:\&gt; Disable-IISSharedConfig -CopyRemoteConfigToLocalFiles</dev:code>
<dev:remarks><maml:para>This command disables shared configuration. IIS copies the shared configuration locally and uses it. The backed up keys are deleted and are not restored.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Enable-IISSharedConfig</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-IISSharedConfig</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Enable-IISCentralCertProvider</command:name>
<command:verb>Enable</command:verb>
<command:noun>IISCentralCertProvider</command:noun>
<maml:description><maml:para>Enables the IIS central certificate store.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Enable-IISCentralCertProvider cmdlet enables the IIS central certificate store. The central certificate store allows you to store all your IIS certificates in a centralized location (such as a file share); IIS servers then retrieve certificate from this centralized location. That means that you only have to install certificates in one location; there is no need to install the same certificate on each and every IIS server.
</maml:para>
<maml:para>When you install the central certificate store the store is disabled by default. To actually use this capability you need to run the Enable-IISCentralCertProvider cmdlet.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Enable-IISCentralCertProvider</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>CertStoreLocation</maml:name>
<maml:Description><maml:para>Specifies the physical path to the central certificate store; this can be either a local path (e.g., D:\CertStore) or a UNC path. For example:
</maml:para>
<maml:para>`-CertStoreLocation "\\CertStoreServer\CertStore"`
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>Password</maml:name>
<maml:Description><maml:para>Specifies the password for the user account used to access the certificate store. For example:
</maml:para>
<maml:para>`-Password "P@ssw0rd"`
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
<dev:type><maml:name>SecureString</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>PrivateKeyPassword</maml:name>
<maml:Description><maml:para>Specifies the private key password for your IIS certificates. For example:
</maml:para>
<maml:para>`-PrivateKeyPassword "pa$$W0rd"`
</maml:para>
<maml:para>This parameter should only be used if all your IIS certificates share the same password.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
<dev:type><maml:name>SecureString</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>UserName</maml:name>
<maml:Description><maml:para>Specifies the user account used to access the certificate store; this can be either an Active Directory SAM Account Name or a user principal name. For example:
</maml:para>
<maml:para>`-UserName "IISCertificateAdmin"`
</maml:para>
<maml:para>It is recommended that you create a user account reserved solely for certificate administration, and that you give this account only the privileges required to manage the certificate store (most notably, the account needs read access to the store location). The certificate store user account can be either a local account or a domain account.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>CertStoreLocation</maml:name>
<maml:Description><maml:para>Specifies the physical path to the central certificate store; this can be either a local path (e.g., D:\CertStore) or a UNC path. For example:
</maml:para>
<maml:para>`-CertStoreLocation "\\CertStoreServer\CertStore"`
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>Password</maml:name>
<maml:Description><maml:para>Specifies the password for the user account used to access the certificate store. For example:
</maml:para>
<maml:para>`-Password "P@ssw0rd"`
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
<dev:type><maml:name>SecureString</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>PrivateKeyPassword</maml:name>
<maml:Description><maml:para>Specifies the private key password for your IIS certificates. For example:
</maml:para>
<maml:para>`-PrivateKeyPassword "pa$$W0rd"`
</maml:para>
<maml:para>This parameter should only be used if all your IIS certificates share the same password.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
<dev:type><maml:name>SecureString</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>UserName</maml:name>
<maml:Description><maml:para>Specifies the user account used to access the certificate store; this can be either an Active Directory SAM Account Name or a user principal name. For example:
</maml:para>
<maml:para>`-UserName "IISCertificateAdmin"`
</maml:para>
<maml:para>It is recommended that you create a user account reserved solely for certificate administration, and that you give this account only the privileges required to manage the certificate store (most notably, the account needs read access to the store location). The certificate store user account can be either a local account or a domain account.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name> </maml:name>
</dev:type>
<maml:description><maml:para>Enable-IISCentralCertProvider does not accept pipelined input.
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name> </maml:name>
</dev:type>
<maml:description><maml:para>Enable-IISCentralCertProvider does not return any objects.
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Enable the central certificate store</maml:title>
<dev:code>PS C:\&gt; Enable-IISCentralCertProvider -CertStoreLocation "\\CertStoreServer\CertStore" -UserName "IISCertificateAdmin" -Password "P@ssw0rd"</dev:code>
<dev:remarks><maml:para>This command enables the IIS central certificate store. In this example, the certificate store is located on file share \\CertStoreServer\CertStore and accessed by using the user account IISCertificateAdmin.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Enable the central certificate store and specify the private key password</maml:title>
<dev:code>PS C:\&gt; Enable-IISCentralCertProvider -CertStoreLocation "\\CertStoreServer\CertStore" -UserName "IISCertificateAdmin" -Password "P@ssw0rd" -PrivateKeyPassword "pa$$W0rd"</dev:code>
<dev:remarks><maml:para>This command is a variation of the command shown in Example 1. In Example 2, however, the PrivateKeyPassword parameter is included to specify the private key password that has been assigned to all the IIS certificates.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Clear-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-IISCentralCertProviderCredential</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Enable-IISSharedConfig</command:name>
<command:verb>Enable</command:verb>
<command:noun>IISSharedConfig</command:noun>
<maml:description><maml:para>Enables shared configuration.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Enable-IISSharedConfig cmdlet enables the IIS shared configuration feature. Before enabling shared configuration, this operation backs up the keys.
</maml:para>
<maml:para>You can disable shared configuration through IIS Manager or with the Disable-IISSharedConfig cmdlet.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Enable-IISSharedConfig</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="none"><maml:name>PhysicalPath</maml:name>
<maml:Description><maml:para>Specifies the location of the exported configuration and keys.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>UserName</maml:name>
<maml:Description><maml:para>Specifies the user name of the account to access the physical location.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="3" aliases="none"><maml:name>Password</maml:name>
<maml:Description><maml:para>Specifies the password of the account for accessing the physical location.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
<dev:type><maml:name>SecureString</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="4" aliases="none"><maml:name>KeyEncryptionPassword</maml:name>
<maml:Description><maml:para>Specifies the key encryption password for the exported keys. This value is initially specified with the Export-IISConfiguration cmdlet or through IIS Manager. KeyEncryptionPassword is required if you don't specify a value for DontCopyRemoteKeys . If you specify a value for DontCopyRemoteKeys , you cannot use this parameter.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
<dev:type><maml:name>SecureString</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>DontCopyRemoteKeys</maml:name>
<maml:Description><maml:para>Indicates that IIS uses the currently active keys, and will try to use the configuration specified by the PhysicalPath parameter. If this exported configuration has secrets encrypted with a different key, IIS will now be unable to decrypt these secrets.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Force</maml:name>
<maml:Description><maml:para>Forces the command to run without asking for user confirmation.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>DontCopyRemoteKeys</maml:name>
<maml:Description><maml:para>Indicates that IIS uses the currently active keys, and will try to use the configuration specified by the PhysicalPath parameter. If this exported configuration has secrets encrypted with a different key, IIS will now be unable to decrypt these secrets.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Force</maml:name>
<maml:Description><maml:para>Forces the command to run without asking for user confirmation.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="4" aliases="none"><maml:name>KeyEncryptionPassword</maml:name>
<maml:Description><maml:para>Specifies the key encryption password for the exported keys. This value is initially specified with the Export-IISConfiguration cmdlet or through IIS Manager. KeyEncryptionPassword is required if you don't specify a value for DontCopyRemoteKeys . If you specify a value for DontCopyRemoteKeys , you cannot use this parameter.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
<dev:type><maml:name>SecureString</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="3" aliases="none"><maml:name>Password</maml:name>
<maml:Description><maml:para>Specifies the password of the account for accessing the physical location.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
<dev:type><maml:name>SecureString</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="none"><maml:name>PhysicalPath</maml:name>
<maml:Description><maml:para>Specifies the location of the exported configuration and keys.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>UserName</maml:name>
<maml:Description><maml:para>Specifies the user name of the account to access the physical location.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes></command:inputTypes>
<command:returnValues></command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Enable shared configuration</maml:title>
<dev:code>PS C:\&gt; $KeyEncryptionPassword = ConvertTo-SecureString -AsPlainText -String "SecurePa$$w0rd" -Force
#For automation scenarios
PS C:\&gt; $KeyEncryptionPassword = Read-Host -AsSecureString
#For UI scenarios
PS C:\&gt; $Password = Read-Host -AsSecureString
PS C:\&gt; Enable-IISSharedConfig -PhysicalPath "C:\export" -KeyEncryptionPassword $KeyEncryptionPassword -UserName "administrator" -Password $Password</dev:code>
<dev:remarks><maml:para>Passwords must be in SecureString format. The first command uses ConvertTo-SecureString to convert the specified password, and then stores it in the $KeyEncryptionPassword variable. Using ConvertTo-SecureString is useful in automation scenarios.
</maml:para>
<maml:para>The second command uses Read-Host to read console input for the key encryption password, and then stores it in the $KeyEncryptionPassword variable. Using Read-Host is a more secure method for UI scenarios.
</maml:para>
<maml:para>The third command uses Read-Host to get the password for the user account that has permission to perform the operation.
</maml:para>
<maml:para>The fourth command enables shared configuration using the exported configuration and keys at C:\export.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Enable shared configuration without importing the keys</maml:title>
<dev:code>PS C:\&gt; Enable-IISSharedConfig -PhysicalPath "C:\export" -DontCopyRemoteKeys</dev:code>
<dev:remarks><maml:para>This command enables shared configuration, but does not import the keys into the local key store.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Disable-IISSharedConfig</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-IISSharedConfig</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Export-IISConfiguration</command:name>
<command:verb>Export</command:verb>
<command:noun>IISConfiguration</command:noun>
<maml:description><maml:para>Exports the IIS configuration and machine keys.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Export-IISConfiguration cmdlet exports the IIS configuration and machine keys to a specified location.
</maml:para>
<maml:para>The exported configuration is available only to administrators through the access control list (ACL).
</maml:para>
<maml:para>You can encrypt the machine keys with the KeyEncryptionPassword parameter.
</maml:para>
<maml:para>You must supply a valid username and password to access the export location. If you do not want to export the keys, specify the DontExportKeys parameter.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Export-IISConfiguration</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="none"><maml:name>PhysicalPath</maml:name>
<maml:Description><maml:para>Specifies the location to which to export the configuration and  keys.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>UserName</maml:name>
<maml:Description><maml:para>Specifies the user name of the account to access the physical location.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="3" aliases="none"><maml:name>Password</maml:name>
<maml:Description><maml:para>Specifies the password of the account for accessing the physical location.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
<dev:type><maml:name>SecureString</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="4" aliases="none"><maml:name>KeyEncryptionPassword</maml:name>
<maml:Description><maml:para>Specifies the key encryption password for the exported keys.
</maml:para>
<maml:para>You can use this value with Enable-IISSharedConfig to enable shared configuration with the configuration that this cmdlet exports.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
<dev:type><maml:name>SecureString</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>DontExportKeys</maml:name>
<maml:Description><maml:para>Indicates that this operation does not export the keys.
</maml:para>
<maml:para>To enable the IIS shared configuration feature with this exported configuration, run the Enable-IISSharedConfig cmdlet with the DontCopyRemoteKeys switch parameter.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Force</maml:name>
<maml:Description><maml:para>Forces the command to run without asking for user confirmation.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>DontExportKeys</maml:name>
<maml:Description><maml:para>Indicates that this operation does not export the keys.
</maml:para>
<maml:para>To enable the IIS shared configuration feature with this exported configuration, run the Enable-IISSharedConfig cmdlet with the DontCopyRemoteKeys switch parameter.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Force</maml:name>
<maml:Description><maml:para>Forces the command to run without asking for user confirmation.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="4" aliases="none"><maml:name>KeyEncryptionPassword</maml:name>
<maml:Description><maml:para>Specifies the key encryption password for the exported keys.
</maml:para>
<maml:para>You can use this value with Enable-IISSharedConfig to enable shared configuration with the configuration that this cmdlet exports.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
<dev:type><maml:name>SecureString</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="3" aliases="none"><maml:name>Password</maml:name>
<maml:Description><maml:para>Specifies the password of the account for accessing the physical location.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
<dev:type><maml:name>SecureString</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="none"><maml:name>PhysicalPath</maml:name>
<maml:Description><maml:para>Specifies the location to which to export the configuration and  keys.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>UserName</maml:name>
<maml:Description><maml:para>Specifies the user name of the account to access the physical location.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes></command:inputTypes>
<command:returnValues></command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Export a configuration</maml:title>
<dev:code>PS C:\&gt; $KeyEncryptionPassword = ConvertTo-SecureString -AsPlainText -String "SecurePa$$w0rd" -Force
#Automation scenarios
PS C:\&gt; $KeyEncryptionPassword = Read-Host -AsSecureString
#UI scenarios
PS C:\&gt; Export-IISConfiguration -PhysicalPath "C:\export" -KeyEncryptionPassword $keyEncryptionPassword
PS C:\&gt; Export-IISConfiguration -PhysicalPath "C:\export" -DontExportKeys -Force</dev:code>
<dev:remarks><maml:para>Passwords must be in SecureString format. The first command uses ConvertTo-SecureString to convert the specified password, and then stores it in the $KeyEncryptionPassword variable. Using ConvertTo-SecureString is useful in automation scenarios.
</maml:para>
<maml:para>The second command uses Read-Host to read console input for the key encryption password, and then stores it in the $KeyEncryptionPassword variable. Using Read-Host is a more secure method for UI scenarios.
</maml:para>
<maml:para>The third command exports the keys and configuration to C:\export, and encrypts the key with the specified password.
</maml:para>
<maml:para>The fourth command exports the configuration without the keys. Because the Force parameter is specified, this command overwrites the previous configuration. The exported keys in C:\export are not deleted.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks></command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Get-IISAppPool</command:name>
<command:verb>Get</command:verb>
<command:noun>IISAppPool</command:noun>
<maml:description><maml:para>Gets configuration information for an IIS Application Pool.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Get-IISAppPool cmdlet gets information about application pools and their current status and other key information.  If a specific application pool or a comma delimited list of application pools are requested, only those whose names are passed as an argument are returned. Otherwise all the application pools are returned.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Get-IISAppPool</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the name of the application pool(s) in which the configuration information is returned.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the name of the application pool(s) in which the configuration information is returned.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>string, string[]</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.Web.Administration.ApplicationPool, Microsoft.Web.Administration.ApplicationPool[]</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Get information about specific app pool(s)</maml:title>
<dev:code>PS C:\&gt; Get-IISAppPool "DefaultAppPool","NewAppPool"
Name                 Status       CLR Ver  Pipeline Mode  Start Mode
----                 ------       -------  -------------  ----------
DefaultAppPool       Started      v4.0     Integrated     OnDemand
NewAppPool           Started      v4.0     Integrated     OnDemand</dev:code>
<dev:remarks><maml:para>This command gets the configuration information for the pools DefaultAppPool and NewAppPool.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Get information about all application pools</maml:title>
<dev:code>PS C:\&gt; Get-IISAppPool
Name                 Status       CLR Ver  Pipeline Mode  Start Mode
----                 ------       -------  -------------  ----------
DefaultAppPool       Started      v4.0     Integrated     OnDemand
.NET v4.5 Classic    Started      v4.0     Classic        OnDemand
.NET v4.5            Started      v4.0     Integrated     OnDemand
PattiFul             Stopped      v4.0     Integrated     OnDemand</dev:code>
<dev:remarks><maml:para>This command gets the configuration information for all application pools.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>IIS Administration Cmdlets for Windows PowerShell</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Get-IISCentralCertProvider</command:name>
<command:verb>Get</command:verb>
<command:noun>IISCentralCertProvider</command:noun>
<maml:description><maml:para>Gets information about the IIS central certificate store.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Get-IISCentralCertProvider cmdlet returns information about the IIS central certificate store. The central certificate store allows you to store all your IIS certificates in a centralized location (such as a file share); IIS servers then retrieve certificate from this centralized location. That means that you only have to install certificates in one location; there is no need to install the same certificate on each and every IIS server.
</maml:para>
<maml:para>Called without any parameters, Get-IISCentralCertProvider returns information for all the certificate store property values. Alternatively, you can include one or more optional parameters in order to limit the returned data only to the specified properties. For example, this command limits the returned data to the Enabled property:
</maml:para>
<maml:para>Get-IISCentralCertProvider -Enabled
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Get-IISCentralCertProvider</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>CertStoreLocation</maml:name>
<maml:Description><maml:para>Indicates that the certificate store location will be returned when running the command. If no parameters are specified when calling Get-IISCentralCertProvider then information will be returned for all the property values.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Enabled</maml:name>
<maml:Description><maml:para>Indicates that the current state of the central store (enabled or disabled) will be returned when running the command. If no parameters are specified when calling Get-IISCentralCertProvider then information will be returned for all the property values.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PrivateKeyPassword</maml:name>
<maml:Description><maml:para>Indicates that the private key password will be returned when running the command. If no parameters are specified when calling Get-IISCentralCertProvider then information will be returned for all the property values.
</maml:para>
<maml:para>Note that the password itself will not be displayed on screen; instead, you will only see a series of asterisks ( * **). While this does not tell you what the private key password is, it does let you know that a private key password has been configured for the certificate store. If no value is returned for the PrivateKeyPassword property that means that no private key password has been assigned to the certificate store.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>UserName</maml:name>
<maml:Description><maml:para>Indicates that the central store user account name will be returned when running the command. If no parameters are specified when calling Get-IISCentralCertProvider then information will be returned for all the property values.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>CertStoreLocation</maml:name>
<maml:Description><maml:para>Indicates that the certificate store location will be returned when running the command. If no parameters are specified when calling Get-IISCentralCertProvider then information will be returned for all the property values.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Enabled</maml:name>
<maml:Description><maml:para>Indicates that the current state of the central store (enabled or disabled) will be returned when running the command. If no parameters are specified when calling Get-IISCentralCertProvider then information will be returned for all the property values.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PrivateKeyPassword</maml:name>
<maml:Description><maml:para>Indicates that the private key password will be returned when running the command. If no parameters are specified when calling Get-IISCentralCertProvider then information will be returned for all the property values.
</maml:para>
<maml:para>Note that the password itself will not be displayed on screen; instead, you will only see a series of asterisks ( * **). While this does not tell you what the private key password is, it does let you know that a private key password has been configured for the certificate store. If no value is returned for the PrivateKeyPassword property that means that no private key password has been assigned to the certificate store.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>UserName</maml:name>
<maml:Description><maml:para>Indicates that the central store user account name will be returned when running the command. If no parameters are specified when calling Get-IISCentralCertProvider then information will be returned for all the property values.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name> </maml:name>
</dev:type>
<maml:description><maml:para>* *Get-IISCentralCertProvider does not accept pipelined input.
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name> </maml:name>
</dev:type>
<maml:description><maml:para>Get-IISCentralCertProvider returns instances of the System.String object.
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1</maml:title>
<dev:code>PS C:\&gt; Get-IISCentralCertProvider</dev:code>
<dev:remarks><maml:para>This command returns information about the IIS central certificate store. Because no parameters are used when running this command Get-IISCentralCertProvider returns information for all the certificate store properties.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2</maml:title>
<dev:code>PS C:\&gt; Get-IISCentralCertProvider -CertStoreLocation -UserName</dev:code>
<dev:remarks><maml:para>This command returns information for two properties of the IIS central certificate store: the store location ( CertStoreLocation ) and the name of the user account used for accessing the store ( UserName ). Values for other properties (such as the private key password) are not returned. To return all the property values leave off all parameter when calling Get-IISCentralCertProvider .
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Clear-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-IISCentralCertProviderCredential</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Get-IISConfigAttributeValue</command:name>
<command:verb>Get</command:verb>
<command:noun>IISConfigAttributeValue</command:noun>
<maml:description><maml:para>Gets a configuration attribute value from an IIS configuration section or configuration element attribute.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Get-IISConfigAttributeValue cmdlet gets a configuration attribute value from an Internet Information Services (IIS) configuration section attribute or a configuration element attribute. The value returned is the value that can be extracted from the given ConfigurationElement and not necessarily the effective value for a given site / virtual directory / folder etc. To obtain the effective attribute values, always retrieve the configuration element by specifying the commit path as the deepest level possible. Even the configuration attribute is not defined at that level, the parent attributes are scanned and the effective configuration element is returned. You can then work on this ConfigurationElement to get/set/remove configuration attribute values.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Get-IISConfigAttributeValue</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>ConfigElement</maml:name>
<maml:Description><maml:para>Specifies the IIS ConfigurationSection or ConfigurationElement for which the attribute value will be looked up.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ConfigurationElement</command:parameterValue>
<dev:type><maml:name>ConfigurationElement</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>AttributeName</maml:name>
<maml:Description><maml:para>Specifies the name of the attribute that will be retrieved.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>AttributeName</maml:name>
<maml:Description><maml:para>Specifies the name of the attribute that will be retrieved.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>ConfigElement</maml:name>
<maml:Description><maml:para>Specifies the IIS ConfigurationSection or ConfigurationElement for which the attribute value will be looked up.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ConfigurationElement</command:parameterValue>
<dev:type><maml:name>ConfigurationElement</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.Web.Administration.ConfigurationElement, System.String</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>object</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Get a configuration attribute from an IIS website</maml:title>
<dev:code>PS C:\&gt; Get-IISSite "Default Web Site" | Get-IISConfigElement -ChildElementName "limits" | Get-IISConfigAttributeValue -AttributeName "MaxUrlSegments"</dev:code>
<dev:remarks><maml:para>This command gets the configuration attribute MaxUrlSegments for the Default Web Site.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Get configuration attribute values from different parts of the configuration store</maml:title>
<dev:code>PS C:\&gt; Get-IISConfigSection "system.webServer/asp" | Get-IISConfigAttributeValue -AttributeName "ScriptErrorMessage"
error message inside the location path default web site</dev:code>
<dev:remarks><maml:para>This command gets the global attribute value for ScriptErrorMessage
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Set-IISConfigAttributeValue</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>IIS Administration Cmdlets for Windows PowerShell</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Get-IISConfigCollection</command:name>
<command:verb>Get</command:verb>
<command:noun>IISConfigCollection</command:noun>
<maml:description><maml:para>Gets a configuration collection object from an IIS configuration section or a configuration element.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Get-IISConfigCollection cmdlet gets a ConfigurationCollection object from either a ConfigurationSection or a ConfigurationElement. 
</maml:para>
<maml:para>It is advisable to not to assign this value to a parameter and pass it in the pipeline to the next cmdlet since Windows PowerShell cannot interpret this object. This is due to the fact that ConfigurationCollection implements IEnumarable and the pipeline processor enumrates each single element when used this way. Instead either pass the whole Get-IISConfigCollection cmdlet in the pipeline or pass it as a parameter.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Get-IISConfigCollection</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>ConfigElement</maml:name>
<maml:Description><maml:para>Specifies the IIS ConfigurationSection or ConfigurationElement for which the ConfigurationCollection is returned.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ConfigurationElement</command:parameterValue>
<dev:type><maml:name>ConfigurationElement</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>CollectionName</maml:name>
<maml:Description><maml:para>Specifies the name of the collection to be returned. If the name of the collection is not used, the Default Collection is returned. Alternatively, the named collection can be retrieved by Get-IISConfigElement then the default collection inside this element can be retrieved.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>CollectionName</maml:name>
<maml:Description><maml:para>Specifies the name of the collection to be returned. If the name of the collection is not used, the Default Collection is returned. Alternatively, the named collection can be retrieved by Get-IISConfigElement then the default collection inside this element can be retrieved.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>ConfigElement</maml:name>
<maml:Description><maml:para>Specifies the IIS ConfigurationSection or ConfigurationElement for which the ConfigurationCollection is returned.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ConfigurationElement</command:parameterValue>
<dev:type><maml:name>ConfigurationElement</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.Web.Administration.ConfigurationElement,System.String</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues></command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Get a configuration collection from an IIS configuration element</maml:title>
<dev:code>PS C:\&gt; Get-IISConfigSection -SectionPath "system.webServer/defaultDocument" | Get-IISConfigCollection -CollectionName "files"

Attributes      : {value}
ChildElements   : {}
ElementTagName  : add
IsLocallyStored : True
Methods         : 
RawAttributes   : {[value, Default.htm]} 
Schema          : Microsoft.Web.Administration.ConfigurationElementSchema

Attributes      : {value}
ChildElements   : {}
ElementTagName  : add
IsLocallyStored : True
Methods         : 
RawAttributes   : {[value, Default.asp]} 
Schema          : Microsoft.Web.Administration.ConfigurationElementSchema</dev:code>
<dev:remarks><maml:para>This command gets the Files Collection for the system.webServer/defaultDocument section.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Get a configuration element from an IIS configuration section</maml:title>
<dev:code>PS C:\&gt; Get-IISConfigSection -SectionPath "system.webServer/defaultDocument" | Get-IISConfigElement -ChildElementName "files" | Get-IISConfigCollection


Attributes      : {value}
ChildElements   : {}
ElementTagName  : add
IsLocallyStored : True
Methods         : 
RawAttributes   : {[value, Default.htm]} 
Schema          : Microsoft.Web.Administration.ConfigurationElementSchema

Attributes      : {value}
ChildElements   : {}
ElementTagName  : add
IsLocallyStored : True
Methods         : 
RawAttributes   : {[value, Default.asp]} 
Schema          : Microsoft.Web.Administration.ConfigurationElementSchema</dev:code>
<dev:remarks><maml:para>This command gets the Files Element configuration object from the system.webServer/defaultDocument section then gets its default collection. The output of the two formats are the same.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Clear-IISConfigCollection</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-IISConfigElement</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>IIS Administration Cmdlets for Windows PowerShell</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Get-IISConfigCollectionElement</command:name>
<command:verb>Get</command:verb>
<command:noun>IISConfigCollectionElement</command:noun>
<maml:description><maml:para>Gets a configuration element object from an IIS configuration collection.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Get-IISConfigCollectionElement cmdlet gets a ConfigurationElement object that is part of a given ConfigurationCollection. The returned element then can be used in further cmdlets that expect a ConfigurationElement .
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Get-IISConfigCollectionElement</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>ConfigCollection</maml:name>
<maml:Description><maml:para>Specifies the ConfigurationCollection object for which the collection elements will be returned. If a ConfigurationCollection is previously obtained and assigned to a varible, you cannot pass it to this cmdlet through the pipeline because the pipeline engine will try to enumerate, passing ConfigurationElement objects instead. Try either passing the whole Get-IISConfigCollection cmdlet into the pipeline or use it as a parameter for correct results.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ConfigurationElementCollection</command:parameterValue>
<dev:type><maml:name>ConfigurationElementCollection</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="3" aliases="none"><maml:name>ConfigAttribute</maml:name>
<maml:Description><maml:para>Specifies a hashtable of the attributes for the configuration element to be inserted. The cmdlet will fail if any required attributes are omitted from this table.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
<dev:type><maml:name>Hashtable</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="3" aliases="none"><maml:name>ConfigAttribute</maml:name>
<maml:Description><maml:para>Specifies a hashtable of the attributes for the configuration element to be inserted. The cmdlet will fail if any required attributes are omitted from this table.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
<dev:type><maml:name>Hashtable</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>ConfigCollection</maml:name>
<maml:Description><maml:para>Specifies the ConfigurationCollection object for which the collection elements will be returned. If a ConfigurationCollection is previously obtained and assigned to a varible, you cannot pass it to this cmdlet through the pipeline because the pipeline engine will try to enumerate, passing ConfigurationElement objects instead. Try either passing the whole Get-IISConfigCollection cmdlet into the pipeline or use it as a parameter for correct results.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ConfigurationElementCollection</command:parameterValue>
<dev:type><maml:name>ConfigurationElementCollection</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.Web.Administration.ConfigurationElementCollection, System.Collections.Hashtable</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.Web.Administration.ConfigurationElement</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Get a configuration element for the default web site by passing the collection through a pipeline</maml:title>
<dev:code>PS C:\&gt; Get-IISConfigSection -SectionPath "system.applicationHost/sites" | Get-IISConfigCollection | Get-IISConfigCollectionElement -ConfigAttribute @{"name"="Default Web Site"}</dev:code>
<dev:remarks><maml:para>This command gets a configuration element for the default web site by passing the collection through a pipeline.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Get a configuration element using a configuration collection as a parameter</maml:title>
<dev:code>PS C:\&gt; $SiteCollection = Get-IISConfigSection -SectionPath "system.applicationHost/sites" | Get-IISConfigCollection
Get-IISConfigCollectionElement -ConfigCollection $SiteCollection -ConfigAttribute @{"name"="Default Web Site"}</dev:code>
<dev:remarks><maml:para>This command gets a configuration element for the default web site and then stores the element into variable $SiteCollection.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>New-IISConfigCollectionElement</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Remove-IISConfigCollectionElement</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>IIS Administration Cmdlets for Windows PowerShell</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Get-IISConfigElement</command:name>
<command:verb>Get</command:verb>
<command:noun>IISConfigElement</command:noun>
<maml:description><maml:para>Gets a configuration element object from an IIS configuration section or a configuration element.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Get-IISConfigElement cmdlet gets a child ConfigurationElement object from either a ConfigurationSection or a ConfigurationElement.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Get-IISConfigElement</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>ConfigElement</maml:name>
<maml:Description><maml:para>Specifies the IIS ConfigurationSection or ConfigurationElement for which the child ConfigurationElement is returned.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ConfigurationElement</command:parameterValue>
<dev:type><maml:name>ConfigurationElement</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>ChildElementName</maml:name>
<maml:Description><maml:para>Specifies the name of the child ConfigurationElement to be returned. If this parameter is omitted, all the child elements for the given parent are returned.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>ChildElementName</maml:name>
<maml:Description><maml:para>Specifies the name of the child ConfigurationElement to be returned. If this parameter is omitted, all the child elements for the given parent are returned.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>ConfigElement</maml:name>
<maml:Description><maml:para>Specifies the IIS ConfigurationSection or ConfigurationElement for which the child ConfigurationElement is returned.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ConfigurationElement</command:parameterValue>
<dev:type><maml:name>ConfigurationElement</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.Web.Administration.ConfigurationElement, System.String</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.Web.Administration.ConfigurationElement</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Get a configuration element for an IIS website</maml:title>
<dev:code>PS C:\&gt; $ConfigSection = Get-IISConfigSection -SectionPath "system.applicationHost/sites"
PS C:\&gt; $SitesCollection = Get-IISConfigCollection -ConfigElement $ConfigSection
PS C:\&gt; $Site = Get-IISConfigCollectionElement -ConfigCollection $SitesCollection -ConfigAttribute @{"name" = "Default Web Site"}
PS C:\&gt; $Elem = Get-IISConfigElement -ConfigElement $Site -ChildElementName "limits"
PS C:\&gt; Get-IISConfigAttributeValue -ConfigElement $Elem -AttributeName "MaxUrlSegments"</dev:code>
<dev:remarks><maml:para>This command returns the configuration element limits for the Default Web Site into the Windows PowerShell variable $Elem.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Remove-IISConfigElement</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>IIS Administration Cmdlets for Windows PowerShell</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Get-IISConfigSection</command:name>
<command:verb>Get</command:verb>
<command:noun>IISConfigSection</command:noun>
<maml:description><maml:para>Gets a configuration section object to work further with the IIS Configuration Store.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Get-IISConfigSection cmdlet gets a configuration section (Microsoft.Web.Administration.ConfigurationSection) object to work further with the Internet Information Services (IIS) Configuration Store. It is generally the first cmdlet to use if configuration is to be read or updated. The output of this cmdlet can be passed to other cmdlets in the pipeline where ConfigurationElement objects are expected, since ConfigurationSection inherits from ConfigurationElement. 
</maml:para>
<maml:para>If the SectionPath parameter is not used, the cmdlet lists all the available sections. The sections that can be used are either defined in the applicationHost.config (IIS Configuration) or root web.config (.NET Framework).
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Get-IISConfigSection</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>SectionPath</maml:name>
<maml:Description><maml:para>Specifies the name of the IIS configuration section for which a configuration object is returned.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>CommitPath</maml:name>
<maml:Description><maml:para>Specifies the path where the configuration will be retrieved from. If CommitPath is omitted, applicationHost.config or root .NET configuration (root web.config) will be used.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="3" aliases="none"><maml:name>Location</maml:name>
<maml:Description><maml:para>Specifies the name of the IIS configuration location for which a configuration object is returned. This corresponds to the &lt;location&gt; tag in configuration files.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="4" aliases="none"><maml:name>Clr</maml:name>
<maml:Description><maml:para>Specifies the version of the root level .NET Framework Common Language Runtime (CLR) that IIS points to. If this parameter is omitted then the default CLR version is used. Note, however, that if the CommitPath parameter is included in the command the Clr parameter will be ignored and the runtime version of the corresponding application pool will be used instead.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="4" aliases="none"><maml:name>Clr</maml:name>
<maml:Description><maml:para>Specifies the version of the root level .NET Framework Common Language Runtime (CLR) that IIS points to. If this parameter is omitted then the default CLR version is used. Note, however, that if the CommitPath parameter is included in the command the Clr parameter will be ignored and the runtime version of the corresponding application pool will be used instead.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>CommitPath</maml:name>
<maml:Description><maml:para>Specifies the path where the configuration will be retrieved from. If CommitPath is omitted, applicationHost.config or root .NET configuration (root web.config) will be used.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="3" aliases="none"><maml:name>Location</maml:name>
<maml:Description><maml:para>Specifies the name of the IIS configuration location for which a configuration object is returned. This corresponds to the &lt;location&gt; tag in configuration files.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>SectionPath</maml:name>
<maml:Description><maml:para>Specifies the name of the IIS configuration section for which a configuration object is returned.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>string, string[]</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.Web.Administration.ConfigurationSection, Microsoft.Web.Administration.ConfigurationSection[]</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Get a configuration section object for a section path</maml:title>
<dev:code>PS C:\&gt; $ConfigSection = Get-IISConfigSection -SectionPath "system.applicationHost/sites"</dev:code>
<dev:remarks><maml:para>This command gets the configuration section object for the system.applicationHost/sites section.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Get process state information for an IIS website</maml:title>
<dev:code>PS C:\&gt; $ConfigSection = Get-IISConfigSection -SectionPath "system.applicationHost/sites"
Get-IISConfigCollection $configSection | Get-IISConfigCollectionElement -ConfigAttribute @{"Name"="Default Web Site"} | Get-IISConfigAttributeValue -AttributeName "State"</dev:code>
<dev:remarks><maml:para>This command gets runtime state information for the Default Web Site.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 3: Add a new default document at the global configuration level</maml:title>
<dev:code>PS C:\&gt; Get-IISConfigSection -SectionPath "system.webServer/defaultDocument" | Get-IISConfigCollection -CollectionName "files" | New-IISConfigCollectionElement  -ConfigAttribute @{"Value" = "MyDefDoc.htm"}</dev:code>
<dev:remarks><maml:para>This command adds filename MyDefDoc.htm to the &lt;files&gt; collection of the &lt;defaultDocument&gt; section of the applicationHost.config file.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 4: Create an application pool</maml:title>
<dev:code>PS C:\&gt; Start-IISCommitDelay
PS C:\&gt; $ConfigSectionCollection = Get-IISConfigSection -SectionPath "system.applicationHost/applicationPools" | Get-IISConfigCollection
PS C:\&gt; New-IISConfigCollectionElement -ConfigCollection $configSectionCollection -ConfigAttribute @{"name"="MyNewSiteAppPool"; "autoStart"=$true; "managedPipelineMode"="Integrated" }
PS C:\&gt; Stop-IISCommitDelay</dev:code>
<dev:remarks><maml:para>This command creates an application pool and stores the result in variable $ConfigSectionCollection.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 5: Create a collection element and specify the CLR version</maml:title>
<dev:code>PS C:\&gt; $collection = Get-IISConfigSection -SectionPath "appSettings" -Clr 2.0</dev:code>
<dev:remarks><maml:para>This command creates a new collection element using the SectionPath "appSettings"; that element is stored in a variable named $collection. In addition, the Clr parameter is used to set the Common Language Runtime to version 2.0.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Get-IISServerManager</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>IIS Administration Cmdlets for Windows PowerShell</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Get-IISServerManager</command:name>
<command:verb>Get</command:verb>
<command:noun>IISServerManager</command:noun>
<maml:description><maml:para>Gets the IISAdministration view of IIS ServerManager.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Get-IISServerManager cmdlet gets Internet Information Services (IIS) server manager object from Microsoft.Web.Administration.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Get-IISServerManager</maml:name>
</command:syntaxItem>
</command:syntax>
<command:parameters></command:parameters>
<command:inputTypes></command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.Web.Administration.ServerManager</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Get an active Microsoft.Web.Administration.ServerManager object</maml:title>
<dev:code>PS C:\&gt; $SM = Get-IISServerManager</dev:code>
<dev:remarks><maml:para>This command gets the active Microsoft.Web.Administration.ServerManager object and stores the result into the variable $SM.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Use the ServerManager object to get site objects and list IIS Web sites</maml:title>
<dev:code>PS C:\&gt; $SM = Get-IISServerManager
PS C:\&gt; $Sites = $SM.Sites
PS C:\&gt; $Sites
Name             ID   State      Physical Path                  Bindings
----             --   -----      -------------                  --------
Default Web Site 1    Stopped    %SystemDrive%\inetpub\wwwroot  http *:80: 
Patti            2    Started    C:\inetpub\Patti               http *:8080: 
                                                                http *:8033: 

FTPSite          3               C:\inetpub\ftproot             ftp *:21: 
DavidChe         4    Started    c:\                            http *:8088: 
MyNewSite        6555 Started    C:\inetpub\wwwroot             http *:8099: 
                                                                http *:8022: 
TestSite         5    Stopped    C:\inetpub\testsite            http *:8080:</dev:code>
<dev:remarks><maml:para>This command gets site objects and lists all IIS web sites by using the ServerManager object.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 3: Use the ServerManager object to get application pool objects and recycle an application pool.</maml:title>
<dev:code>PS C:\&gt; $SM = Get-IISServerManager
PS C:\&gt; $SM.ApplicationPools["PattiFul"].Recycle()</dev:code>
<dev:remarks><maml:para>This command uses the ServerManager object to get application pool objects and then recycles an application pool.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks></command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Get-IISSharedConfig</command:name>
<command:verb>Get</command:verb>
<command:noun>IISSharedConfig</command:noun>
<maml:description><maml:para>Gets IIS shared configuration status.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Get-IISSharedConfig cmdlet gets the current status of the IIS shared configuration feature.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Get-IISSharedConfig</maml:name>
</command:syntaxItem>
</command:syntax>
<command:parameters></command:parameters>
<command:inputTypes></command:inputTypes>
<command:returnValues></command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Get shared configuration status</maml:title>
<dev:code>PS C:\&gt; Get-IISSharedConfig
Enabled = True
Physical Path = C:\export
UserName = administrator</dev:code>
<dev:remarks><maml:para>This command gets the status of the IIS shared configuration.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Disable-IISSharedConfig</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-IISSharedConfig</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Get-IISSite</command:name>
<command:verb>Get</command:verb>
<command:noun>IISSite</command:noun>
<maml:description><maml:para>Gets configuration information for an IIS Web site.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Get-IISSite cmdlet gets information about Internet Information Services (IIS) web sites and their current status and other key information.  If you a request a specific site or a comma delimited list of sites, only those whose names are passed as an argument are returned. Otherwise all the websites are returned.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Get-IISSite</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the name of the IIS website to get configuration information. If this parameter is not used, all sites are returned.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the name of the IIS website to get configuration information. If this parameter is not used, all sites are returned.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>String, array of string</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.Web.Administration.Site</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Get information about an IIS website</maml:title>
<dev:code>PS C:\&gt; Get-IISSite "Default Web Site"</dev:code>
<dev:remarks><maml:para>This command gets the configuration information for the Default Web Site.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Get information about all IIS websites</maml:title>
<dev:code>PS C:\&gt; Get-IISSite
Name             ID   State      Physical Path                  Bindings
----             --   -----      -------------                  --------
Default Web Site 1    Started    %SystemDrive%\inetpub\wwwroot  http *:80: 
PattiFul         2    Stopped    C:\inetpub\PattiFul            http *:8080: 
                                                                http *:8033: 
FTPSite          3               C:\inetpub\ftproot             ftp *:21: 
DavidChe         4    Started    c:\                            http *:8088: 
MyNewSite        6555 Started    C:\inetpub\wwwroot             http *:8099: 
                                                                http *:8022:</dev:code>
<dev:remarks><maml:para>This command gets all configuration information about all IIS websites
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 3: Get an attribute for an IIS website</maml:title>
<dev:code>PS C:\&gt; $Site = Get-IISSite "Default Web Site"
PS C:\&gt; $Site.Attributes["ServerAutoStart"]
IsInheritedFromDefaultValue : True
IsProtected                 : False
Name                        : serverAutoStart
Schema                      : Microsoft.Web.Administration.ConfigurationAttributeSchema
Value                       : True</dev:code>
<dev:remarks><maml:para>This command gets the ServerAutoStart attribute for the IIS Default Web Site.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>New-IISSite</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Remove-IISSite</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Start-IISSite</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Stop-IISSite</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>IIS Administration Cmdlets for Windows PowerShell</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Get-IISSiteBinding</command:name>
<command:verb>Get</command:verb>
<command:noun>IISSiteBinding</command:noun>
<maml:description><maml:para>Gets the bindings on the specified IIS site.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Get-IISSiteBinding cmdlet gets information about website bindings and their current status and other key information.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Get-IISSiteBinding</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the name of the IIS website.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="none"><maml:name>BindingInformation</maml:name>
<maml:Description><maml:para>Specifies the binding information string to use for the new site. The binding information of the form  IP:Port:hostname such as 192.168.0.1:80:www.contoso.com and one or more of the fields can be left blank, which  is equivalent to using a wildcard character such as :443:. In this representation indicates all IP  addresses and all hostnames are indicated by leaving the corresponding field blank.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>Protocol</maml:name>
<maml:Description><maml:para>The protocol for which the binding is configured, usually http, https or ftp.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="none"><maml:name>BindingInformation</maml:name>
<maml:Description><maml:para>Specifies the binding information string to use for the new site. The binding information of the form  IP:Port:hostname such as 192.168.0.1:80:www.contoso.com and one or more of the fields can be left blank, which  is equivalent to using a wildcard character such as :443:. In this representation indicates all IP  addresses and all hostnames are indicated by leaving the corresponding field blank.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the name of the IIS website.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>Protocol</maml:name>
<maml:Description><maml:para>The protocol for which the binding is configured, usually http, https or ftp.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>System.String</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.Web.Administration.BindingCollection</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Get Information about an IIS website binding</maml:title>
<dev:code>PS C:\&gt; Get-IISSiteBinding "Default Web Site" "*:80:"</dev:code>
<dev:remarks><maml:para>This command gets the binding information for the "*:80:" binding of the Default Web Site.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Get information about all bindings of an IIS website</maml:title>
<dev:code>PS C:\&gt; Get-IISSiteBinding "Default Web Site"

protocol bindingInformation sslFlags
-------- ------------------ --------
http     *:80:                  None
http     *:1234:                None</dev:code>
<dev:remarks><maml:para>This command gets all configuration information about all bindings of the Default Web Site
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>New-IISSiteBinding</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Remove-IISSiteBinding</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>IIS Administration Cmdlets for Windows PowerShell</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>New-IISConfigCollectionElement</command:name>
<command:verb>New</command:verb>
<command:noun>IISConfigCollectionElement</command:noun>
<maml:description><maml:para>Creates a new configuration element object in an IIS configuration collection.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The New-IISConfigCollectionElement cmdlet creates a new ConfigurationElement in a given Internet Information Services (IIS) ConfigurationCollection.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>New-IISConfigCollectionElement</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>ConfigCollection</maml:name>
<maml:Description><maml:para>Specifies the ConfigurationCollection object to which the new collection element will be added. If a ConfigurationCollection is previously obtained and assigned to a variable, you cannot pass it to this cmdlet through the pipeline because the pipeline engine will try to enumerate it, passing ConfigurationElement objects instead. Try either passing the whole Get-IISConfigCollection cmdlet into the pipeline or use it as a parameter for correct results.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ConfigurationElementCollection</command:parameterValue>
<dev:type><maml:name>ConfigurationElementCollection</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>ConfigAttribute</maml:name>
<maml:Description><maml:para>Specifies a hashtable of the attributes for the configuration element to be inserted. The cmdlet will fail if any required attributes are omitted from this table.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
<dev:type><maml:name>Hashtable</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="3" aliases="none"><maml:name>AddAt</maml:name>
<maml:Description><maml:para>Specifies the collection index for the new configuration element; by default, new elements are added to the end of the collection. The collection index specifies the ordering of items in the collection: the first item in the collection is item 0; the second item in the collection is item 1; and so on.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">UInt32</command:parameterValue>
<dev:type><maml:name>UInt32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Passthru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="3" aliases="none"><maml:name>AddAt</maml:name>
<maml:Description><maml:para>Specifies the collection index for the new configuration element; by default, new elements are added to the end of the collection. The collection index specifies the ordering of items in the collection: the first item in the collection is item 0; the second item in the collection is item 1; and so on.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">UInt32</command:parameterValue>
<dev:type><maml:name>UInt32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>ConfigAttribute</maml:name>
<maml:Description><maml:para>Specifies a hashtable of the attributes for the configuration element to be inserted. The cmdlet will fail if any required attributes are omitted from this table.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
<dev:type><maml:name>Hashtable</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>ConfigCollection</maml:name>
<maml:Description><maml:para>Specifies the ConfigurationCollection object to which the new collection element will be added. If a ConfigurationCollection is previously obtained and assigned to a variable, you cannot pass it to this cmdlet through the pipeline because the pipeline engine will try to enumerate it, passing ConfigurationElement objects instead. Try either passing the whole Get-IISConfigCollection cmdlet into the pipeline or use it as a parameter for correct results.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ConfigurationElementCollection</command:parameterValue>
<dev:type><maml:name>ConfigurationElementCollection</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Passthru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.Web.Administration.ConfigurationElementCollection, System.Collections.Hashtable</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.Web.Administration.Configuration</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Add a new file name to list of default documents</maml:title>
<dev:code>PS C:\&gt; $ConfigSection = Get-IISConfigSection -SectionPath "system.webServer/defaultDocument"
PS C:\&gt; $DefaultDocumentCollection = Get-IISConfigCollection -ConfigElement $ConfigSection -CollectionName "files"
PS C:\&gt; New-IISConfigCollectionElement 
  -ConfigCollection $DefaultDocumentCollection -ConfigAttribute @{"Value" = "MyDefDoc.htm"}</dev:code>
<dev:remarks><maml:para>This command creates an entry in the list of default documents.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Add a new file name to the top of the list of default documents</maml:title>
<dev:code>PS C:\&gt; Get-IISConfigSection -SectionPath "system.webServer/defaultDocument" | Get-IISConfigCollection -CollectionName "files" | New-IISConfigCollectionElement  -ConfigAttribute @{Value = "MyDefDoc.htm"} -AddAt 0</dev:code>
<dev:remarks><maml:para>This command creates a new entry in the list of default documents, and makes this new entry the first item in the collection. This is done by setting the value of the AddAt parameter to 0; the first item in a collection is always item number 0.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Get-IISConfigCollectionElement</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>IIS Administration Cmdlets for Windows PowerShell</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>New-IISSite</command:name>
<command:verb>New</command:verb>
<command:noun>IISSite</command:noun>
<maml:description><maml:para>Creates an IIS Website.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The New-IISSite cmdlet is used to create an Internet Information Services (IIS) website with the given physical site as the root and binding information to listen on a specific IP:Port:Hostname binding.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>New-IISSite</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>BindingInformation</maml:name>
<maml:Description><maml:para>Specifies the binding information string to use for the new site. The binding information of the form IP:Port:hostname such as 192.168.0.1:80:www.contoso.com and one or more of the fields can be left blank, which is equivalent to using a wildcard character such as *:443:. In this representation *  indicates all IP addresses and all hostnames are indicated by leaving the corresponding field blank.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>CertificateThumbPrint</maml:name>
<maml:Description><maml:para>Specifies a certificate thumbprint, which is used to add a new HTTPS binding
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>CertStoreLocation</maml:name>
<maml:Description><maml:para>Specifies the certificate store path of the certificate, which is used to add a new HTTPS binding
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Force</maml:name>
<maml:Description><maml:para>Forces the command to run without asking for user confirmation.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the name of the IIS website.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Passthru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>PhysicalPath</maml:name>
<maml:Description><maml:para>Specifies the physical path to the new IIS website.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>Protocol</maml:name>
<maml:Description><maml:para>The protocol for which the binding is configured, usually http, https or ftp.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>SslFlag</maml:name>
<maml:Description><maml:para>Specifies the SSL flag settings of the new binding.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">SslFlags</command:parameterValue>
<dev:type><maml:name>SslFlags</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>BindingInformation</maml:name>
<maml:Description><maml:para>Specifies the binding information string to use for the new site. The binding information of the form IP:Port:hostname such as 192.168.0.1:80:www.contoso.com and one or more of the fields can be left blank, which is equivalent to using a wildcard character such as *:443:. In this representation *  indicates all IP addresses and all hostnames are indicated by leaving the corresponding field blank.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>CertificateThumbPrint</maml:name>
<maml:Description><maml:para>Specifies a certificate thumbprint, which is used to add a new HTTPS binding
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>CertStoreLocation</maml:name>
<maml:Description><maml:para>Specifies the certificate store path of the certificate, which is used to add a new HTTPS binding
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Force</maml:name>
<maml:Description><maml:para>Forces the command to run without asking for user confirmation.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the name of the IIS website.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Passthru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>PhysicalPath</maml:name>
<maml:Description><maml:para>Specifies the physical path to the new IIS website.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>Protocol</maml:name>
<maml:Description><maml:para>The protocol for which the binding is configured, usually http, https or ftp.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>SslFlag</maml:name>
<maml:Description><maml:para>Specifies the SSL flag settings of the new binding.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">SslFlags</command:parameterValue>
<dev:type><maml:name>SslFlags</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>String</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.Web.Administration.Site</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Add a new IIS web site</maml:title>
<dev:code>PS C:\&gt; New-IISSite -Name "TestSite" -BindingInformation "*:8080:" -PhysicalPath "$env:systemdrive\inetpub\testsite"</dev:code>
<dev:remarks><maml:para>This command creates a new website named TestSite.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Add a new website and set application pool of the site default application to a custom name</maml:title>
<dev:code>PS C:\&gt; Start-IISCommitDelay
PS C:\&gt; $TestSite = New-IISSite -Name TestSite -BindingInformation "*:8080:" -PhysicalPath "$env:systemdrive\inetpub\testsite" -Passthru
PS C:\&gt; $TestSite.Applications["/"].ApplicationPoolName = "TestSiteAppPool"
PS C:\&gt; Stop-IISCommitDelay</dev:code>
<dev:remarks><maml:para>This command creates a website named TestSite with default application assigned to the TestSiteAppPool application pool.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 3: Add a new website of HTTPS binding</maml:title>
<dev:code>PS C:\&gt; New-IISSite -Name "TestSite" -PhysicalPath "$env:systemdrive\inetpub\testsite" -BindingInformation "*:443:" -CertificateThumbPrint "D043B153FCEFD5011B9C28E186A60B9F13103363" -CertStoreLocation "Cert:\LocalMachine\Webhosting" -Protocol https</dev:code>
<dev:remarks><maml:para>This command creates a website named TestSite with HTTPS binding
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Get-IISSite</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Remove-IISSite</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Start-IISSite</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Stop-IISSite</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-IISSiteBinding</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>IIS Administration Cmdlets for Windows PowerShell</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>New-IISSiteBinding</command:name>
<command:verb>New</command:verb>
<command:noun>IISSiteBinding</command:noun>
<maml:description><maml:para>Adds a new binding to an existing Website.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Adds a new binding to an existing Website.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>New-IISSiteBinding</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the name of the IIS website.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="none"><maml:name>BindingInformation</maml:name>
<maml:Description><maml:para>Specifies the binding information string to use for the new site. The binding information of the form  IP:Port:hostname such as 192.168.0.1:80:www.contoso.com and one or more of the fields can be left blank, which  is equivalent to using a wildcard character such as :443:. In this representation indicates all IP  addresses and all hostnames are indicated by leaving the corresponding field blank.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>Protocol</maml:name>
<maml:Description><maml:para>The protocol for which the binding is configured, usually http, https or ftp.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="3" aliases="none"><maml:name>CertificateThumbPrint</maml:name>
<maml:Description><maml:para>Specifies a certificate thumbprint, which is used to add a new HTTPS binding.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="4" aliases="none"><maml:name>SslFlag</maml:name>
<maml:Description><maml:para>Specifies the SSL Flag(s) of the new binding.
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">None</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Sni</command:parameterValue>
<command:parameterValue required="false" variableLength="false">CentralCertStore</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">SslFlags</command:parameterValue>
<dev:type><maml:name>SslFlags</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="5" aliases="none"><maml:name>CertStoreLocation</maml:name>
<maml:Description><maml:para>Specifies the certificate store path of the certificate, which is used to add a new HTTPS binding.
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">Cert:\LocalMachine\My</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Cert:\LocalMachine\WebHosting</command:parameterValue>
<command:parameterValue required="false" variableLength="false">My</command:parameterValue>
<command:parameterValue required="false" variableLength="false">WebHosting</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Force</maml:name>
<maml:Description><maml:para>Forces the command to run without asking for user confirmation.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Passthru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="none"><maml:name>BindingInformation</maml:name>
<maml:Description><maml:para>Specifies the binding information string to use for the new site. The binding information of the form  IP:Port:hostname such as 192.168.0.1:80:www.contoso.com and one or more of the fields can be left blank, which  is equivalent to using a wildcard character such as :443:. In this representation indicates all IP  addresses and all hostnames are indicated by leaving the corresponding field blank.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="3" aliases="none"><maml:name>CertificateThumbPrint</maml:name>
<maml:Description><maml:para>Specifies a certificate thumbprint, which is used to add a new HTTPS binding.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="5" aliases="none"><maml:name>CertStoreLocation</maml:name>
<maml:Description><maml:para>Specifies the certificate store path of the certificate, which is used to add a new HTTPS binding.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Force</maml:name>
<maml:Description><maml:para>Forces the command to run without asking for user confirmation.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the name of the IIS website.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Passthru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>Protocol</maml:name>
<maml:Description><maml:para>The protocol for which the binding is configured, usually http, https or ftp.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="4" aliases="none"><maml:name>SslFlag</maml:name>
<maml:Description><maml:para>Specifies the SSL Flag(s) of the new binding.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">SslFlags</command:parameterValue>
<dev:type><maml:name>SslFlags</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>System.String</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.Web.Administration.BindingCollection</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Create a new HTTP binding</maml:title>
<dev:code>PS C:\&gt; New-IISSiteBinding -Name "TestSite" -BindingInformation "*:8080:" -Protocol http</dev:code>
<dev:remarks><maml:para>This command creates a new HTTP binding of "*:8080:" on a website named TestSite
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Create a new HTTPS binding</maml:title>
<dev:code>PS C:\&gt; New-IISSiteBinding -Name "TestSite" -BindingInformation "*:443:" -CertificateThumbPrint "D043B153FCEFD5011B9C28E186A60B9F13103363" -CertStoreLocation "Cert:\LocalMachine\Webhosting" -Protocol https</dev:code>
<dev:remarks><maml:para>This command creates a new HTTPS binding of "*:443:" bindingInformation on a website named TestSite using an existing certificate which has a thumbprint of D043B153FCEFD5011B9C28E186A60B9F13103363 and  is placed at the Cert:\LocalMachine\Webhosting certificate store
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 3: Create a new HTTPS binding and set it with Sni and CentralCertStore SSL flag settings</maml:title>
<dev:code>PS C:\&gt; New-IISSiteBinding -Name "TestSite" "*:443:foo.com" -Protocol https -SslFlag "Sni, CentralCertStore"</dev:code>
<dev:remarks><maml:para>This command creates a new HTTPS binding of "*:443:foo.com" on a website named TestSite setting the SNI and CentralCertStore SSL flag settings
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 4: Create a new self signed certificate and use it for adding a new HTTPS binding for testing purpose</maml:title>
<dev:code>$password = "string1"  # put your password on string1
$hostName = "localhost"
$port = "443"
$storeLocation = "Cert:\LocalMachine\My"
$certificate = New-SelfSignedCertificate -DnsName $hostName -CertStoreLocation $storeLocation
$thumbPrint = $certificate.Thumbprint
$bindingInformation = "*:" + $port + ":" + $hostName
$certificatePath = ("cert:\localmachine\my\" + $certificate.Thumbprint)
$securedString = ConvertTo-SecureString -String $password -Force -AsPlainText
Export-PfxCertificate -FilePath "C:\temp\temp.pfx" -Cert $certificatePath -Password $securedString
Import-PfxCertificate -FilePath "C:\temp\temp.pfx" -CertStoreLocation "Cert:\LocalMachine\Root" -Password $securedString
New-IISSiteBinding -Name "TestSite" -BindingInformation $bindingInformation -CertificateThumbPrint $thumbPrint -CertStoreLocation $storeLocation -Protocol https</dev:code>
<dev:remarks><maml:para>This powershell script example shows how to create a self-signed certificate on Personal store. Export the certificate to ROOT store to make the certificate considered as a trusted certificate  in the local machine and add a new HTTPS binding on a website named TestSite for testing purposes.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Get-IISSiteBinding</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Remove-IISSiteBinding</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-IISSite</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>IIS Administration Cmdlets for Windows PowerShell</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Remove-IISConfigAttribute</command:name>
<command:verb>Remove</command:verb>
<command:noun>IISConfigAttribute</command:noun>
<maml:description><maml:para>Removes a configuration attribute from an IIS configuration section or configuration element attribute.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Remove-IISConfigAttribute cmdlet removes a configuration attribute from an Internet Information Services (IIS) configuration section or a configuration element. The value removed is the value for the given ConfigurationElement and not necessarily the effective value for a given site / virtual directory / folder etc. To obtain the effective attribute values, always retrieve the configuration element by specifying the commit path as the deepest level possible. Even the configuration attribute is not defined at that level, the parent attributes are scanned and the effective configuration element is returned. You can then work on this ConfigurationElement to get/set/remove configuration attribute values.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Remove-IISConfigAttribute</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>ConfigElement</maml:name>
<maml:Description><maml:para>Specifies the IIS ConfigurationSection or ConfigurationElement from which the matching attribute is to be deleted.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ConfigurationElement</command:parameterValue>
<dev:type><maml:name>ConfigurationElement</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>AttributeName</maml:name>
<maml:Description><maml:para>Specifies the name of the attribute that is to be deleted.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>AttributeName</maml:name>
<maml:Description><maml:para>Specifies the name of the attribute that is to be deleted.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>ConfigElement</maml:name>
<maml:Description><maml:para>Specifies the IIS ConfigurationSection or ConfigurationElement from which the matching attribute is to be deleted.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ConfigurationElement</command:parameterValue>
<dev:type><maml:name>ConfigurationElement</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.Web.Administration.ConfigurationElement, String</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues></command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Remove a configuration attribute from an IIS web site.</maml:title>
<dev:code>PS C:\&gt; Get-IISSite "Default Web Site" | Get-IISConfigElement -ChildElementName "limits" | Remove-IISConfigAttribute -AttributeName "MaxUrlSegments"</dev:code>
<dev:remarks><maml:para>This command removes the configuration attribute value for the attribute MaxUrlSegments from the Default Web Site, defaulting to its parent or system wide defaults.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Remove configuration attribute values from different parts of the configuration store:</maml:title>
<dev:code>PS C:\&gt; Get-IISConfigSection "system.webServer/asp" | Remove-IISConfigAttribute -AttributeName "ScriptErrorMessage"</dev:code>
<dev:remarks><maml:para>This command removes the global attribute value for ScriptErrorMessage, defaulting to the schema default.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Get-IISConfigAttributeValue</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-IISConfigAttributeValue</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>IIS Administration Cmdlets for Windows PowerShell</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Remove-IISConfigCollectionElement</command:name>
<command:verb>Remove</command:verb>
<command:noun>IISConfigCollectionElement</command:noun>
<maml:description><maml:para>Removes a configuration element object from an IIS configuration collection.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Remove-IISConfigCollectionElement cmdlet removes a ConfigurationElement from a given Internet Information Services (IIS) ConfigurationCollection.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Remove-IISConfigCollectionElement</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>ConfigCollection</maml:name>
<maml:Description><maml:para>Specifies the ConfigurationCollection from which the matching ConfigurationElements will be removed.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ConfigurationElementCollection</command:parameterValue>
<dev:type><maml:name>ConfigurationElementCollection</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>ConfigAttribute</maml:name>
<maml:Description><maml:para>Specifies a hashtable of the attributes to match while searching for the configuration elements to delete in the collection. For the configuration attributes that are not specified, no filtering will be done. If you omit this parameter, all the elements in the collection are deleted.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
<dev:type><maml:name>Hashtable</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>ConfigAttribute</maml:name>
<maml:Description><maml:para>Specifies a hashtable of the attributes to match while searching for the configuration elements to delete in the collection. For the configuration attributes that are not specified, no filtering will be done. If you omit this parameter, all the elements in the collection are deleted.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
<dev:type><maml:name>Hashtable</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>ConfigCollection</maml:name>
<maml:Description><maml:para>Specifies the ConfigurationCollection from which the matching ConfigurationElements will be removed.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ConfigurationElementCollection</command:parameterValue>
<dev:type><maml:name>ConfigurationElementCollection</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.Web.Administration.ConfigurationElementCollection, System.Collections.Hashtable</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues></command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Remove a file name from the list of default documents</maml:title>
<dev:code>PS C:\&gt; $ConfigSection = Get-IISConfigSection -SectionPath "system.webServer/defaultDocument"
PS C:\&gt; Get-IISConfigCollection $ConfigSection "Files" | Remove-IISConfigCollectionElement  -ConfigAttribute @{"Value" = "MyDefDoc.htm"}</dev:code>
<dev:remarks><maml:para>This command removes a configuration entry from the list of default documents.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Get-IISConfigCollectionElement</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-IISConfigCollectionElement</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>IIS Administration Cmdlets for Windows PowerShell</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Remove-IISConfigElement</command:name>
<command:verb>Remove</command:verb>
<command:noun>IISConfigElement</command:noun>
<maml:description><maml:para>Removes a specified configuration element.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Remove-IISConfigElement cmdlet deletes a specified configuration element. This affectively causes that configuration element to inherit from the parents, if any, or use the default value as described in the schema. If the configuration element that is being removed is a collection element, it is removed from the collection, in which case the functionality is equivalent to Remove-IISConfigCollectionElement.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Remove-IISConfigElement</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>ConfigElement</maml:name>
<maml:Description><maml:para>Specifies the Internet Information Services (IIS) ConfigurationSection or ConfigurationElement to be deleted.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ConfigurationElement</command:parameterValue>
<dev:type><maml:name>ConfigurationElement</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>ConfigElement</maml:name>
<maml:Description><maml:para>Specifies the Internet Information Services (IIS) ConfigurationSection or ConfigurationElement to be deleted.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ConfigurationElement</command:parameterValue>
<dev:type><maml:name>ConfigurationElement</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.Web.Administration.ConfigurationElement</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues></command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Remove a configuration element from an IIS website</maml:title>
<dev:code>PS C:\&gt; Get-IISConfigSection "system.webServer/defaultDocument" -CommitPath "Default Web Site" | Remove-IISConfigElement</dev:code>
<dev:remarks><maml:para>This command removes a configuration section from a web configuration contained in IIS website Default Web Site.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Get-IISConfigElement</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Remove-IISConfigCollectionElement</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>IIS Administration Cmdlets for Windows PowerShell</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Remove-IISSite</command:name>
<command:verb>Remove</command:verb>
<command:noun>IISSite</command:noun>
<maml:description><maml:para>Removes a web site from an IIS server.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Remove-IISSite cmdlet removes a web site with the given name from an Internet Information Services (IIS) server.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Remove-IISSite</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the name of the IIS website to remove.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the name of the IIS website to remove.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>string, string[]</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues></command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Remove a web site from an IIS server</maml:title>
<dev:code>PS C:\&gt; Remove-IISSite -Name "TestSite"</dev:code>
<dev:remarks><maml:para>This command removes a website named TestSite from an IIS server.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Get-IISSite</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-IISSite</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Start-IISSite</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Stop-IISSite</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>IIS Administration Cmdlets for Windows PowerShell</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Remove-IISSiteBinding</command:name>
<command:verb>Remove</command:verb>
<command:noun>IISSiteBinding</command:noun>
<maml:description><maml:para>Removes a binding from an IIS website.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Removes a binding from an IIS website.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Remove-IISSiteBinding</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the name of the IIS website.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>BindingInformation</maml:name>
<maml:Description><maml:para>Specifies the binding information string to use for the new site. The binding information of the form  IP:Port:hostname such as 192.168.0.1:80:www.contoso.com and one or more of the fields can be left blank, which  is equivalent to using a wildcard character such as :443:. In this representation indicates all IP  addresses and all hostnames are indicated by leaving the corresponding field blank.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>Protocol</maml:name>
<maml:Description><maml:para>The protocol for which the binding is configured, usually http, https or ftp.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RemoveConfigOnly</maml:name>
<maml:Description><maml:para>Indicates that this operation does not remove the SSL certificate information and only removes the IIS binding configuration information in the applicationhost.config.
</maml:para>
<maml:para>If you want to delete a HTTPS binding configuration that shares a SSL certificate with other existing bindings, only the IIS binding configuration should be removed so that the SSL certificate information remains. This is to ensure that the other existing bindings will still have access to the certificate.
</maml:para>
<maml:para>This parameter is ignored if you are removing a binding which does not have a certificate.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>BindingInformation</maml:name>
<maml:Description><maml:para>Specifies the binding information string to use for the new site. The binding information of the form  IP:Port:hostname such as 192.168.0.1:80:www.contoso.com and one or more of the fields can be left blank, which  is equivalent to using a wildcard character such as :443:. In this representation indicates all IP  addresses and all hostnames are indicated by leaving the corresponding field blank.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the name of the IIS website.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>Protocol</maml:name>
<maml:Description><maml:para>The protocol for which the binding is configured, usually http, https or ftp.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RemoveConfigOnly</maml:name>
<maml:Description><maml:para>Indicates that this operation does not remove the SSL certificate information and only removes the IIS binding configuration information in the applicationhost.config.
</maml:para>
<maml:para>If you want to delete a HTTPS binding configuration that shares a SSL certificate with other existing bindings, only the IIS binding configuration should be removed so that the SSL certificate information remains. This is to ensure that the other existing bindings will still have access to the certificate.
</maml:para>
<maml:para>This parameter is ignored if you are removing a binding which does not have a certificate.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes></command:inputTypes>
<command:returnValues></command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1</maml:title>
<dev:code>PS C:\&gt; Remove-IISSiteBinding -Name "TestSite" -BindingInformation "*:8080:"</dev:code>
<dev:remarks><maml:para>This command removes a binding of "*:8080:" from a website named TestSite.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Get-IISSiteBinding</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-IISSiteBinding</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>IIS Administration Cmdlets for Windows PowerShell</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Reset-IISServerManager</command:name>
<command:verb>Reset</command:verb>
<command:noun>IISServerManager</command:noun>
<maml:description><maml:para>Resets the IISAdministration view of the IIS ServerManager.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Reset-IISServerManager cmdlet resets the IISAdministration view of the IIS ServerManager object and the view of .config file applicationHost.config to the current contents of the .config file.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Reset-IISServerManager</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes></command:inputTypes>
<command:returnValues></command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Reset the IISServerManager view of the configuration</maml:title>
<dev:code>PS C:\&gt; $Sites = (Get-IISServerManager).Sites
PS C:\&gt; $Sites["default web site"].Attributes["serverAutoStart"]
IsInheritedFromDefaultValue : True

IsProtected                 : False

Name                        : serverAutoStart

Schema                      : Microsoft.Web.Administration.ConfigurationAttributeSchema

Value                       : True PS C:\&gt; $Sites["default web site"].Attributes["serverAutoStart"].value = $false
PS C:\&gt; $Sites["default web site"].Attributes["serverAutoStart"]
IsInheritedFromDefaultValue : False

IsProtected                 : False

Name                        : serverAutoStart

Schema                      : Microsoft.Web.Administration.ConfigurationAttributeSchema

Value                       : False PS C:\&gt; Reset-IISServerManager
PS C:\&gt; $Sites = (Get-IISServerManager).Sites
PS C:\&gt; $Sites["default web site"].Attributes["serverAutoStart"]
IsInheritedFromDefaultValue : True

IsProtected                 : False

Name                        : serverAutoStart

Schema                      : Microsoft.Web.Administration.ConfigurationAttributeSchema

Value                       : True</dev:code>
<dev:remarks><maml:para>This command resets the IISServerManager view of the .config file after changes are made, and then demonstrates that the changed value is restored.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Get-IISServerManager</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>IIS Administration Cmdlets for Windows PowerShell</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Set-IISCentralCertProvider</command:name>
<command:verb>Set</command:verb>
<command:noun>IISCentralCertProvider</command:noun>
<maml:description><maml:para>Sets property values for the IIS central certificate store.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Set-IISCentralCertProvider cmdlet modifies property values for the IIS central certificate store. The central certificate store allows you to store all your IIS certificates in a centralized location (such as a file store); IIS servers then retrieve certificate information from this centralized location. That means that you only have to install certificates in one location; there is no need to install the same certificate on each and every IIS server. Set-IISCentralCertProvider is typically used in one of two scenarios: 1) if you need to change the physical location of the certificate store (for example, if you have moved the store to a new file share); or, 2) if you have run the Clear-IISCentralCertProvider cmdlet and have erased all the certificate store property values. These values must be reconfigured before you can take advantage of the central store capabilities.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Set-IISCentralCertProvider</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>CertStoreLocation</maml:name>
<maml:Description><maml:para>Specifies the physical path to the central certificate store; this can be either a local path (e.g., D:\CertStore) or a UNC path. For example:
</maml:para>
<maml:para>`-CertStoreLocation "\\CertStoreServer\CertStore"`
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>Password</maml:name>
<maml:Description><maml:para>Specifies the password for the user account used to access the certificate store. For example:
</maml:para>
<maml:para>`-Password "P@ssw0rd"`
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
<dev:type><maml:name>SecureString</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>PrivateKeyPassword</maml:name>
<maml:Description><maml:para>Specifies the private key password for your IIS certificates. For example:
</maml:para>
<maml:para>`-PrivateKeyPassword "pa$$W0rd"`
</maml:para>
<maml:para>This parameter should only be used if all your IIS certificates share the same password.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
<dev:type><maml:name>SecureString</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>UserName</maml:name>
<maml:Description><maml:para>Specifies the user account used to access the certificate store; this can be either an Active Directory SAM Account Name or a user principal name. For example:
</maml:para>
<maml:para>`-UserName "IISCertificateAdmin"`
</maml:para>
<maml:para>It is recommended that you create a user account reserved solely for certificate administration, and that you give this account only the privileges required to manage the certificate store (most notably, the account needs read access to the store location). The central store user account can be either a local account or a domain account.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>CertStoreLocation</maml:name>
<maml:Description><maml:para>Specifies the physical path to the central certificate store; this can be either a local path (e.g., D:\CertStore) or a UNC path. For example:
</maml:para>
<maml:para>`-CertStoreLocation "\\CertStoreServer\CertStore"`
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>Password</maml:name>
<maml:Description><maml:para>Specifies the password for the user account used to access the certificate store. For example:
</maml:para>
<maml:para>`-Password "P@ssw0rd"`
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
<dev:type><maml:name>SecureString</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>PrivateKeyPassword</maml:name>
<maml:Description><maml:para>Specifies the private key password for your IIS certificates. For example:
</maml:para>
<maml:para>`-PrivateKeyPassword "pa$$W0rd"`
</maml:para>
<maml:para>This parameter should only be used if all your IIS certificates share the same password.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
<dev:type><maml:name>SecureString</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>UserName</maml:name>
<maml:Description><maml:para>Specifies the user account used to access the certificate store; this can be either an Active Directory SAM Account Name or a user principal name. For example:
</maml:para>
<maml:para>`-UserName "IISCertificateAdmin"`
</maml:para>
<maml:para>It is recommended that you create a user account reserved solely for certificate administration, and that you give this account only the privileges required to manage the certificate store (most notably, the account needs read access to the store location). The central store user account can be either a local account or a domain account.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name> </maml:name>
</dev:type>
<maml:description><maml:para>Set-IISCentralCertProvider does not accept pipelined input.
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name> </maml:name>
</dev:type>
<maml:description><maml:para>Set-IISCentralCertProvider does not return any objects.
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Modify the location of the central certificate store</maml:title>
<dev:code>PS C:\&gt; Set-IISCentralCertProvider -CertStoreLocation "\\NewCertStoreServer\CertStore"</dev:code>
<dev:remarks><maml:para>This command modifies the location of the IIS central certificate store. In this example, the store has been moved to the file share \\NewCertStoreServer\CertStore. Note that Set-IISCentralCertProvider does not move the certificate files to the new location. Instead, the cmdlet merely configures the certificate store to use this new location.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Clear-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-IISCentralCertProviderCredential</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Set-IISCentralCertProviderCredential</command:name>
<command:verb>Set</command:verb>
<command:noun>IISCentralCertProviderCredential</command:noun>
<maml:description><maml:para>Modifies the user account credentials for the IIS certificate store.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Set-IISCentralCertProviderCredential cmdlet enables you to change the user account used to access the IIS central certificate store. The central certificate store allows you to store all your IIS certificates in a centralized location (such as a file share); IIS servers then retrieve certificate from this centralized location. That means that you only have to install certificates in one location; there is no need to install the same certificate on each and every IIS server.
</maml:para>
<maml:para>Servers access the central store by using a preconfigured user account. This account, which can be either a local account or a domain account, must have read-only access to the certificate store location. You must specify a user account when you initially enable the certificate store. However, you can change this user account at any time by running Set-IISCentralCertProviderCredential .
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Set-IISCentralCertProviderCredential</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>UserName</maml:name>
<maml:Description><maml:para>Specifies the user account used to access the certificate store; this can be either an Active Directory SAM Account Name or a user principal name. For example:
</maml:para>
<maml:para>-UserName "IISCertificateAdmin"
</maml:para>
<maml:para>It is recommended that you create a user account reserved solely for certificate administration, and that you give this account only the privileges required to manage the certificate store (most notably, the account needs read access to the store location). The central store user account can be either a local account or a domain account.
</maml:para>
<maml:para>Note that you only need to specify the user account name. You will be prompted for the user account password when the command actually runs.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>UserName</maml:name>
<maml:Description><maml:para>Specifies the user account used to access the certificate store; this can be either an Active Directory SAM Account Name or a user principal name. For example:
</maml:para>
<maml:para>-UserName "IISCertificateAdmin"
</maml:para>
<maml:para>It is recommended that you create a user account reserved solely for certificate administration, and that you give this account only the privileges required to manage the certificate store (most notably, the account needs read access to the store location). The central store user account can be either a local account or a domain account.
</maml:para>
<maml:para>Note that you only need to specify the user account name. You will be prompted for the user account password when the command actually runs.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name> </maml:name>
</dev:type>
<maml:description><maml:para>Set-IISCentralCertProviderCredential does not accept pipelined input.
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name> </maml:name>
</dev:type>
<maml:description><maml:para>Set-IISCentralCertProviderCredential does not return any objects.
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1</maml:title>
<dev:code>PS C:\&gt; Set-IISCentralCertProviderCredential -UserName "IISCertificateAdmin"</dev:code>
<dev:remarks><maml:para>This command changes the central certificate store user account to IISCertificateAdmin. Note that you only specify the user name when calling Set-IISCentralCertProviderCredential . When the command runs you will be prompted to enter the password for the specified user account.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Clear-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-IISCentralCertProvider</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Set-IISConfigAttributeValue</command:name>
<command:verb>Set</command:verb>
<command:noun>IISConfigAttributeValue</command:noun>
<maml:description><maml:para>Sets a configuration attribute value for an IIS configuration section or configuration element attribute.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Set-IISConfigAttributeValue cmdlet sets a configuration attribute value from an Internet Information Services (IIS) configuration section attribute or a configuration element attribute. The value set is for the given ConfigurationElement and not necessarily the effective value for a given site / virtual directory / folder etc. To set the effective attribute values, always retrieve the configuration element by specifying the commit path as the deepest level possible.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Set-IISConfigAttributeValue</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>ConfigElement</maml:name>
<maml:Description><maml:para>Specifies the IIS ConfigurationSection or ConfigurationElement for which the attribute value will be looked up.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ConfigurationElement</command:parameterValue>
<dev:type><maml:name>ConfigurationElement</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>AttributeName</maml:name>
<maml:Description><maml:para>Specifies the name of the attribute for which the value will be set.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="3" aliases="none"><maml:name>AttributeValue</maml:name>
<maml:Description><maml:para>Specifies the new value of the attribute.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
<dev:type><maml:name>Object</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>AttributeName</maml:name>
<maml:Description><maml:para>Specifies the name of the attribute for which the value will be set.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="3" aliases="none"><maml:name>AttributeValue</maml:name>
<maml:Description><maml:para>Specifies the new value of the attribute.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
<dev:type><maml:name>Object</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>ConfigElement</maml:name>
<maml:Description><maml:para>Specifies the IIS ConfigurationSection or ConfigurationElement for which the attribute value will be looked up.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ConfigurationElement</command:parameterValue>
<dev:type><maml:name>ConfigurationElement</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.Web.Administration.ConfigurationElement, System.String, System.Object</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues></command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Set the value of a configuration attribute</maml:title>
<dev:code>PS C:\&gt; $ConfigSection = Get-IISConfigSection -SectionPath "system.applicationHost/sites"
PS C:\&gt; $SitesCollection = Get-IISConfigCollection -ConfigElement $ConfigSection
PS C:\&gt; $Site = Get-IISConfigCollectionElement -ConfigCollection $SitesCollection -ConfigAttribute @{"name" = "Default Web Site"}
PS C:\&gt; $Elem = Get-IISConfigElement -ConfigElement $Site -ChildElementName "limits"
PS C:\&gt; Set-IISConfigAttributeValue -ConfigElement $Elem -AttributeName "MaxUrlSegments" -AttributeValue 16</dev:code>
<dev:remarks><maml:para>This command sets the value of the configuration attribute MaxUrlSegments for the IIS website named Default Web Site to 16.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Get-IISConfigAttributeValue</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>IIS Administration Cmdlets for Windows PowerShell</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Start-IISCommitDelay</command:name>
<command:verb>Start</command:verb>
<command:noun>IISCommitDelay</command:noun>
<maml:description><maml:para>Instructs the IIS configuration system to delay the commitment of changes.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Start-IISCommitDelay cmdlet instructs the Internet Information Services (IIS) configuration system to delay the commitment of changes. The commitment of changes is delayed until the Stop-IISCommitDelay cmdlet is executed.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Start-IISCommitDelay</maml:name>
</command:syntaxItem>
</command:syntax>
<command:parameters></command:parameters>
<command:inputTypes></command:inputTypes>
<command:returnValues></command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Delay the commit of changes</maml:title>
<dev:code>PS C:\&gt; Start-IISCommitDelay</dev:code>
<dev:remarks><maml:para>This command delays the modification of IIS configuration settings until the Stop-IISCommitDelay cmdlet is executed.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Stop-IISCommitDelay</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>IIS Administration Cmdlets for Windows PowerShell</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Start-IISSite</command:name>
<command:verb>Start</command:verb>
<command:noun>IISSite</command:noun>
<maml:description><maml:para>Starts an existing site on the IIS server.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Start-IISSite cmdlet starts an existing site on the Internet Information Services (IIS) server.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Start-IISSite</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the name of the IIS web site
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Passthru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the name of the IIS web site
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Passthru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>String</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.Web.Administration.Site</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Start an IIS web site</maml:title>
<dev:code>PS C:\&gt; Start-IISSite -Name "Default Web Site"</dev:code>
<dev:remarks><maml:para>This command starts an IIS web site named Default Web Site
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Get-IISSite</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-IISSite</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Remove-IISSite</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Stop-IISSite</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>IIS Administration Cmdlets for Windows PowerShell</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Stop-IISCommitDelay</command:name>
<command:verb>Stop</command:verb>
<command:noun>IISCommitDelay</command:noun>
<maml:description><maml:para>Instructs the IIS configuration system to resume the commitment of changes.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Stop-IISCommitDelay cmdlet instructs the Internet Information Services (IIS) configuration system to resume the commitment of changes.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Stop-IISCommitDelay</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>Commit</maml:name>
<maml:Description><maml:para>Indicates that the cmdlet commits the changes if True; Otherwise, if False, the cmdlet discards the changes.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
<dev:type><maml:name>Boolean</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>Commit</maml:name>
<maml:Description><maml:para>Indicates that the cmdlet commits the changes if True; Otherwise, if False, the cmdlet discards the changes.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
<dev:type><maml:name>Boolean</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes></command:inputTypes>
<command:returnValues></command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Commit configuration changes</maml:title>
<dev:code>PS C:\&gt; Stop-IISCommitDelay -Commit $True</dev:code>
<dev:remarks><maml:para>This command commits the configuration changes made since the Start-IISCommitDelay cmdlet was executed.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Discard configuration changes</maml:title>
<dev:code>PS C:\&gt; Stop-IISCommitDelay -Commit $False</dev:code>
<dev:remarks><maml:para>This command discards the configuration changes made since the Start-IISCommitDelay cmdlet was executed.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Start-IISCommitDelay</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>IIS Administration Cmdlets for Windows PowerShell</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Stop-IISSite</command:name>
<command:verb>Stop</command:verb>
<command:noun>IISSite</command:noun>
<maml:description><maml:para>Stops an IIS Web site.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Stop-IISSite cmdlet stops an existing site on the Internet Information Services (IIS) server.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Stop-IISSite</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the name of the IIS web site.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Passthru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the name of the IIS web site.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Passthru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>String</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.Web.Administration.Site</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Stop an IIS website</maml:title>
<dev:code>PS C:\&gt; Stop-IISSite -Name "Default Web Site"</dev:code>
<dev:remarks><maml:para>This command stops the site named Default Web Site.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks></command:relatedLinks>
</command:command>
</helpItems>
