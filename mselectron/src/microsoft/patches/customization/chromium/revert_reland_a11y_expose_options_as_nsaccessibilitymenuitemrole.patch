From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: deepak1556 <hop2deep@gmail.com>
Date: Fri, 6 Jun 2025 17:22:16 +0900
Subject: revert: Reland: [A11y] Expose options as NSAccessibilityMenuItemRole

For https://github.com/microsoft/vscode/issues/250642

The new role incorrectly dismisses focus on the list elements
when treating them as menu items which is more severe regression
than the bug this change was trying to solve.

diff --git a/ui/accessibility/platform/browser_accessibility_cocoa.mm b/ui/accessibility/platform/browser_accessibility_cocoa.mm
index 06eb79f7d39db15b862da9fbdb913318aa092215..d24f8d99f289e305ad0951f22ecfec438a72ad5c 100644
--- a/ui/accessibility/platform/browser_accessibility_cocoa.mm
+++ b/ui/accessibility/platform/browser_accessibility_cocoa.mm
@@ -1239,13 +1239,6 @@ bool ui::IsNSRange(id value) {
     cocoa_role = NSAccessibilityGroupRole;
   } else if (_owner->IsRootWebAreaForPresentationalIframe()) {
     cocoa_role = NSAccessibilityGroupRole;
-  } else if (role == ax::mojom::Role::kListBoxOption && _owner->IsWebContent()) {
-    // Short term solution that allows children until Mac gets a more
-    // appropriate role for options than AXStaticText, which can result
-    // truncation or incorrect announcements of the option text when there are
-    // children. For now, only do this for web content, and not UI, where
-    // there are not interesting descendants of list box options.
-    cocoa_role = NSAccessibilityMenuItemRole;
   } else if (role == ax::mojom::Role::kMenu && ![self hasMenuItemDescendant]) {
     // A menu without menu item descendants should be exposed as a group rather
     // than a menu to avoid confusing assistive technologies. This ensures
@@ -1634,7 +1627,12 @@ bool ui::IsNSRange(id value) {
   DCHECK(_owner->node()->IsDataValid());
 
   if (ui::IsNameExposedInAXValueForRole([self internalRole])) {
-    std::u16string name = _owner->GetNameAsString16();
+    std::u16string name = _owner->GetTextContentUTF16();
+    // Leaf node with aria-label will have empty text content.
+    // e.g. <div role="option" aria-label="label">content</div>
+    // So we use its computed name for AXValue.
+    if (name.empty())
+      name = _owner->GetNameAsString16();
     if (!IsSelectedStateRelevant(_owner)) {
       return base::SysUTF16ToNSString(name);
     }
