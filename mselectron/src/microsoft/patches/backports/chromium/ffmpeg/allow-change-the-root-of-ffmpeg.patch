From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Cheng Zhao <zcbenz@gmail.com>
Date: Wed, 31 Jan 2024 13:07:31 +0900
Subject: Allow change the root of ffmpeg

https://chromium-review.googlesource.com/c/chromium/third_party/ffmpeg/+/5252191

Some embedders build their own brandings of ffmpeg, for example VS Code
uses a config that disables most codecs, Teams only enables the codecs
that they are paying royalties for.

By adding a ffmpeg_root arg that specifies where to look for code
sources, embedders can put their ffmpeg files in a separate dir instead
of patching the third_party/ffmpeg.

Note: there is a sibling patch with the same name.
One patches the ffmpeg repo, the other patches the chromium repo.

diff --git a/BUILD.gn b/BUILD.gn
index 557df069027eaddcc7baa9ebc8f1b1b9dcc50f3e..839fdd625b4aef05b698ff328f48da59082de693 100644
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -2,8 +2,8 @@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
-import("ffmpeg_generated.gni")
 import("ffmpeg_options.gni")
+import("$ffmpeg_root/ffmpeg_generated.gni")
 
 import("//build/buildflag_header.gni")
 import("//build/config/compiler/compiler.gni")
@@ -11,7 +11,7 @@ import("//build/config/sanitizers/sanitizers.gni")
 
 # Path to platform configuration files.
 platform_config_root =
-    "chromium/config/$ffmpeg_branding/$os_config/$ffmpeg_arch"
+    "$ffmpeg_root/chromium/config/$ffmpeg_branding/$os_config/$ffmpeg_arch"
 
 has_nasm_deps =
     ffmpeg_asm_sources != [] &&
@@ -31,7 +31,7 @@ if (has_nasm_deps) {
   }
 
   nasm_assemble("ffmpeg_nasm") {
-    sources = ffmpeg_asm_sources
+    sources = rebase_path(ffmpeg_asm_sources, ".", ffmpeg_root)
 
     # Ensure the architecture defines go in the command line before the -P
     # file below, so don't use defines.
@@ -50,10 +50,10 @@ if (has_nasm_deps) {
 
     defines = [ "PIC" ]
     include_dirs = [
+      ffmpeg_root,
       platform_config_root,
       "libavcodec/x86",
       "libavutil/x86",
-      ".",
     ]
 
     nasm_flags += [
@@ -77,8 +77,8 @@ if (has_nasm_deps) {
 
 config("ffmpeg_dependent_config") {
   include_dirs = [
+    ffmpeg_root,
     platform_config_root,
-    ".",
   ]
 }
 
@@ -196,13 +196,16 @@ if (is_component_ffmpeg) {
   link_target_type = "static_library"
 }
 target(link_target_type, "ffmpeg_internal") {
-  sources = ffmpeg_c_sources + ffmpeg_gas_sources + [
+  sources = rebase_path(ffmpeg_c_sources, ".", ffmpeg_root) +
+            rebase_path(ffmpeg_gas_sources, ".", ffmpeg_root) + [
               "$platform_config_root/config.h",
               "$platform_config_root/libavutil/avconfig.h",
             ]
   include_dirs = [
+    "libavcodec",
+    ffmpeg_root,
     platform_config_root,
-    ".",
+    ".",  # for things like "compat/va_copy.h"
   ]
   defines = [
     "HAVE_AV_CONFIG_H",
diff --git a/ffmpeg_generated.gni b/ffmpeg_generated.gni
index e282aa74801cfa5166482fa78eab3906ee8f4de5..b9aa9e3f27b0f2675d7b3f5bea5e40df0138f8c8 100644
--- a/ffmpeg_generated.gni
+++ b/ffmpeg_generated.gni
@@ -5,7 +5,7 @@
 # NOTE: this file is autogenerated by media/ffmpeg/scripts/generate_gn.py
 
 import("//build/config/arm.gni")
-import("ffmpeg_options.gni")
+import("//third_party/ffmpeg/ffmpeg_options.gni")
 
 # Declare empty versions of each variable for easier +=ing later.
 ffmpeg_c_sources = []
diff --git a/ffmpeg_options.gni b/ffmpeg_options.gni
index 4d8119d5b1ac80e927f4b6cb5bb791e36629ccef..776975e00e637eae09b6fc507653597a81e2c167 100644
--- a/ffmpeg_options.gni
+++ b/ffmpeg_options.gni
@@ -40,6 +40,11 @@ declare_args() {
   # directives as used in chromium's clang stdatomic.h.
   # Some background: https://bugs.llvm.org/show_bug.cgi?id=26828
   ffmpeg_use_unsafe_atomics = false
+
+  # The root dir of ffmpeg, by default it is the dir containing this file.
+  # This is mainly used by embedders that build their own brandings of ffmpeg,
+  # for example VS Code uses a config that disables most codecs.
+  ffmpeg_root = "."
 }
 
 # We no longer have a separate ChromeOS configuration, but don't break existing
@@ -48,7 +53,9 @@ if (ffmpeg_branding == "ChromeOS") {
   ffmpeg_branding = "Chrome"
 }
 
-assert(ffmpeg_branding == "Chromium" || ffmpeg_branding == "Chrome")
+if (ffmpeg_root == "." ) {
+  assert(ffmpeg_branding == "Chromium" || ffmpeg_branding == "Chrome")
+}
 
 if (current_cpu == "x86") {
   ffmpeg_arch = "ia32"
