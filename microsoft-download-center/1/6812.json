{
    "error": "",
    "downloadTitle": "DirectX Software Development Kit",
    "downloadDescription": "This download is the legacy DirectX SDK. It is now end-of-life and should only be used for maintaining older software. For targeting DirectX for Windows 7 or later, use the modern Windows SDK instead.",
    "downloadFile": [
        {
            "isPrimary": "True",
            "name": "DXSDK_Jun10.exe",
            "url": "https://download.microsoft.com/download/a/e/7/ae743f1f-632b-4809-87a9-aa1bb3458e31/DXSDK_Jun10.exe",
            "size": "599455936",
            "version": "9.29.1962.1",
            "datePublished": "7/15/2024 4:30:34 AM"
        }
    ],
    "localeDropdown": [
        {
            "cultureCode": "en-us",
            "name": "English"
        },
        {
            "cultureCode": "zh-cn",
            "name": "Chinese (Simplified)"
        },
        {
            "cultureCode": "zh-tw",
            "name": "Chinese (Traditional)"
        },
        {
            "cultureCode": "ja-jp",
            "name": "Japanese"
        },
        {
            "cultureCode": "ko-kr",
            "name": "Korean"
        },
        {
            "cultureCode": "ru-ru",
            "name": "Russian"
        },
        {
            "cultureCode": "nl-nl",
            "name": "Dutch"
        },
        {
            "cultureCode": "pt-br",
            "name": "Portuguese (Brazil)"
        },
        {
            "cultureCode": "fr-fr",
            "name": "French"
        },
        {
            "cultureCode": "it-it",
            "name": "Italian"
        },
        {
            "cultureCode": "de-de",
            "name": "German"
        },
        {
            "cultureCode": "es-es",
            "name": "Spanish"
        },
        {
            "cultureCode": "cs-cz",
            "name": "Czech"
        },
        {
            "cultureCode": "pl-pl",
            "name": "Polish"
        },
        {
            "cultureCode": "sv-se",
            "name": "Swedish"
        }
    ],
    "detailsSection": "The system headers in this legacy DirectX SDK are newer than the Windows 7.1 SDK, but older than system headers in the Windows 8.x SDK, Windows 10 SDK, or later.\r\nFor details on usage and recommendations for each component and library in this legacy DirectX SDK, see <A HREF=\"https://docs.microsoft.com/en-us/windows/win32/directx-sdk--august-2009-\">Microsoft Docs</A>.p\r\nFor XAudio2, the recommendation is to use <A HREF=\"https://aka.ms/XAudio2Redist \">https://aka.ms/XAudio2Redist</A> instead which supports Windows 7 or later with the latest version. It uses a simple aplication-local redistribution model.\r\n<br> </br>\r\nUsers wishing to install the DirectX runtime for the purposes of playing an older game built using the legacy DirectX SDK should instead install the DirectX End-User Runtime.  See related resources at the bottom of this page.\r\n",
    "detailsSection_kbArticles": {
        "link": "http://support.microsoft.com/kb/",
        "name": ""
    },
    "detailsSection_securityBulletins": {
        "link": "http://technet.microsoft.com/en-us/security/Bulletin/",
        "name": ""
    },
    "detailsSection_file_version": "9.29.1962.1",
    "detailsSection_file_name": [
        "DXSDK_Jun10.exe"
    ],
    "detailsSection_file_size": [
        "571.7 MB"
    ],
    "detailsSection_file_date": "7/15/2024",
    "systemRequirementsSection": "<UL> </UL>",
    "systemRequirementsSection_supportedOS": [
        "Windows Server 2008",
        "Windows XP",
        "Windows Server 2003",
        "Windows 7",
        "Windows Vista"
    ],
    "installInstructionSection": "<OL><LI>Click the <b>Download</b> button on this page to start the download</LI><LI>Do one of the following: </LI><UL><LI>To start the installation immediately, click <B>Run</B>.</LI><LI>To save the download to your computer for installation at a later time, click <B>Save</B>.</LI> <LI>To cancel the installation, click <B>Cancel</B>.</LI></UL></OL>\r\n\r\n",
    "additionalInformationSection": "<br></br><b>What's New in the June 2010 DirectX SDK</b><br></br>\r\n    \r\n    This version of the DirectX SDK contains the following new features, tools, and documentation.<br></br>\r\n    \r\n    <b>Visual Studio 2010 Support</b><br></br>\r\n\r\n    The June 2010 DirectX SDK includes support for Visual Studio 2010. The DirectX SDK will continue to support Visual\r\n    Studio 2008 as well. However, Visual Studio 2005 will no longer be supported.<br></br>\r\n\r\n    <b>PIX: Object Naming Support</b><br></br>\r\n\r\n    The June 2010 version of <b>PIX</b> supports naming for most resource objects \r\n    in Direct3D (D3D). Direct3D enables developers to\r\n    attach arbitrary data to objects in D3D code using the <b>SetPrivateData</b> API for application-specific usage.\r\n    PIX will now display specific string data for objects in the Object Table and other user interface elements where a\r\n    human-readable object name will provide a much more effective experience for the user.<br></br>\r\n\r\n    <b>PIX: Usability Improvements</b><br></br>\r\n\r\n    The June 2010 version of <b>PIX</b> includes improvements to the PIX user interface:\r\n    <ul>\r\n      <li>The Object Table shows the size and shader model for each shader. </li>\r\n\r\n      <li>In the Shader Debugger, there is a new toolbar button that enables the display of all constant registers/variables\r\n      immediately, rather than the first time they are read.</li>\r\n\r\n      <li>In the Shader Debugger, it is possible to copy register and variable data to the clipboard.</li>\r\n\r\n      <li>The Summary pane has a new <i>Direct3D Information</i> section, that shows details about what \r\n      Direct3D capabilities are present on the computer.</li>\r\n    </ul>\r\n\r\n    <b>XNAMath C++ SIMD Math Library</b><br></br>\r\n\r\n    The June 2010 release updates <b>XNAMath</b> to version 2.03, which includes the following changes:\r\n    <ul>\r\n      <li>Addition of <b>XMVectorDivide</b> to optimize SSE2 vector division operations</li>\r\n\r\n      <li>Unified handling of floating-point specials between the Windows SSE2 and no-intrinsics implementations</li>\r\n\r\n      <li>Use of Visual Studio style SAL annotations </li>\r\n\r\n      <li>Modifications to the C++ declarations for <b>XMFLOAT2A/3A/4A/4X3A/4X4A</b> to \r\n      better support these types in C++ templates</li>\r\n    </ul>\r\n\r\n    <b>Version-less Naming of Cross-Runtime Data Types</b><br></br>\r\n\r\n    The June 2010 DirectX SDK removes versioning from several Direct3D data types that cross runtime versions. This change\r\n    makes legacy data-type names equivalent to the new version-less data-type names. Therefore, you can use either\r\n    legacy or version-less names. However, your code will be cleaner and easier to maintain if you use the version-less\r\n    names.<br></br>\r\n\r\n <b>New D3DCreateBlob Function</b><br></br>\r\n\r\n    The June 2010 DirectX SDK includes a D3dcompiler_43.dll that exports the new <b>D3DCreateBlob</b> function. Therefore,\r\n    you are no longer required to use D3d10.dll to create and use an arbitrary length data object.<br></br>\r\n\r\n    <b>New ID3D11ShaderReflection Method</b><br></br>\r\n\r\n    The June 2010 DirectX SDK adds the following new method to the <b>ID3D11ShaderReflection</b> interface:\r\n    <ul>\r\n      <li><b>GetThreadGroupSize</b></li>\r\n    </ul>\r\n\r\n    \r\n    <b>New HLSL Language fixes and features</b><br></br>\r\n\r\n    HLSL has been updated with the following fixes and features:\r\n    <ul>\r\n      <li>The <b>frexp</b> intrinsic function has been updated to return a mantissa in the range of [0.5,1.0].</li>\r\n\r\n      <li>New intrinsic functions have been added for better debugging support.\r\n        <ul>\r\n          <li><b>printf</b> -- submits custom shader messages to the information queue. </li>\r\n\r\n          <li><b>errorf</b> -- submits custom shader error messages to the information queue.</li>\r\n\r\n          <li><b>abort</b> -- submits custom shader error messages to the information queue and terminates \r\n          the current <b>draw</b> or <b>dispatch</b> call being executed. </li>\r\n        </ul>\r\n      </li>\r\n\r\n      <li>Left-Hand-Side typecasting is now illegal and will cause a compile error.\r\n        <ul>\r\n          <li>Expressions such as (int)myFloat = myInt; are no longer valid. Use myFloat = (float)myInt; type syntax instead.</li>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n\r\n <b>New HLSL Compiler fixes and features</b><br></br>\r\n\r\n    The HLSL Effects compiler (fxc.exe) has been updated with the following fixes and features:\r\n    <ul>\r\n      <li>No-optimization (/Od) compiles will produce less-optimized code than before in order to provide improved debugging.</li>\r\n\r\n      <li>No-optimization (/Od) now implies (/Gfp). </li>\r\n\r\n      <li>New compression (/compress) and decompression (/decompress) options have been added to enable the bundling and unbundling of shader files.</li>\r\n\r\n      <li>A new numbering instructions (/Ni) flag has been added to turn on numbering of instructions in shader disassembly.</li>\r\n\r\n      <li>Fxc.exe has a new @command.option.file feature for specifying command options in a file. This enables the /compress and /decompress \r\n      options to be used on many files at once.</li>\r\n    </ul>\r\n\r\n <b>New D3D11 HLSL Format Conversion Functions</b><br></br>\r\n\r\n    The new D3DX_DXGIFormatConvert.inl inline header includes light-weight conversion functions for use in Compute Shaders or Pixel Shaders on \r\n    D3D11 Hardware that can be useful when applications need to simultaneously read and write to textures, such as in-place editing scenarios.\r\n    <br></br>\r\n\r\n\r\n    <b>Documentation Enhancements</b><br></br>\r\n\r\n    The June 2010 DirectX SDK includes the following documentation enhancements:\r\n    <ul>\r\n      <li>Added links to descriptions of data types for parameters and return values to help developers locate related types.</li>\r\n\r\n      <li>Added additional header and lib information to reference pages for APIs implemented in DirectX samples.</li>\r\n    </ul>\r\n \r\n\r\n  <b>Previous Releases</b><br></br>\r\n  \r\n  For a description of what was added in previous releases, see <i>Features Introduced in Previous Releases</i> in the DirectX SDK documentation.<br></br>\r\n\r\n<br></br><b>Known Issues with the June 2010 DirectX SDK</b><br></br>\r\n\r\n\r\n<b>Support for Visual Studio 2010 and Visual Studio 2005</b><br></br>\r\n\r\nBeginning with the June 2010 release, the DirectX SDK supports Visual Studio 2010. The June 2010 release continues to support Visual Studio 2008 Service Pack 1. The DirectX SDK no longer supports Visual Studio 2005; the February 2010 release was the last release to support Visual Studio 2005. <br></br>\r\n\r\n\r\n<b>Support for DirectSetup</b><br></br>\r\nBeginning with the June 2010 DirectX SDK, DirectSetup no longer supports operating systems earlier than Windows XP Service Pack 2 and Windows Server 2003 Service Pack 1.<br></br>\r\n\r\n\r\n<b>Visual Studio 2008 Path Registration Sometimes Fails</b><br></br>\r\n\r\nIn the June 2010 release, the DirectX SDK installer will attempt to automatically register the executable, include, and library path settings needed for compilation of samples and other DirectX programs. In some circumstances, however, automatic registration fails and, therefore, attempts to include DirectX SDK headers result in errors. To work around this issue, manually add the proper path registration to Visual Studio. For more information, see the instructions in the topic \"Installing DirectX with DirectSetup\" in the section \"Install the DirectX SDK\".<br></br>\r\n\r\n\r\n<b>DirectX SDK Does Not Register Include/Library Paths with Visual Studio 2010</b><br></br>\r\n\r\nWith Visual Studio 2010, the model for adding include, library, and executable paths has changed. In Visual Studio 2008 and previous versions, paths were specified as global settings under <b>Tools\\Options</b>. With Visual Studio 2010, paths are now specified on a per-project basis on a VC++ Directories page. All the Visual Studio 2010 projects for the DirectX SDK samples and tools include direct per-project references to the DirectX SDK--via the DXSDK_DIR environment variable--and will compile without any additional steps. New projects that make use of DirectX SDK headers, libraries, or tools should have these references added to the VC++ Directories property page. For more information, see the topic \"Installing DirectX with DirectSetup\" in the section titled \"Install the DirectX SDK\", as well as the Visual Studio team blog entry: <a href=\"http://blogs.msdn.com/b/vcblog/archive/2010/03/02/visual-studio-2010-c-project-upgrade-guide.aspx\">Visual Studio 2010 C++ Project Upgrade Guide</a>. <br></br>\r\n\r\n\r\n<b>Samples Content Exporter Requires Visual Studio 2008</b><br></br>\r\n\r\nIn the June 2010 DirectX SDK, the Samples Content Exporter is designed to use Autodesk FBX SDK 2010.2. The Samples Content Exporter does not work with later versions of the Autodesk FBX SDK (2011.x). Also, the Autodesk FBX SDK does not yet support Visual Studio 2010, and the DirectX SDK Visual Studio 2010 projects for the Samples Content Exporter therefore use the 'v90' toolset provided with Visual Studio 2008. As a result, you must have Visual Studio 2008 installed in order to compile the Samples Content Exporter. For more information, see the Visual Studio team blog post entry: <a href=\"http://blogs.msdn.com/b/vcblog/archive/2009/12/08/c-native-multi-targeting.aspx\">C++ Native Multi-Targeting</a>.<br></br>\r\n\r\n\r\n<b>Help Integration for Visual Studio 2010</b><br></br>\r\n\r\nThe new Microsoft Help System (MHS), delivered via Visual Studio 2010, enables you to view documents on the MSDN Library using a standard browser. You can also select documents to download from the MSDN Online content publication web site (MSDN cloud) to your computer for viewing when a connection to the Internet is unavailable or undesirable. You can access this functionality from the Help Library Manager. To launch the Help Library Manager, select:<br></br>\r\n\r\nStart | All Programs | Visual Studio 2010 | Visual Studio Tools | Help Library Manager<br></br>\r\n\r\nThe MHS is set to Online Mode by default. The first time you click a Help shortcut, you will be asked to confirm that you wish to connect to the Internet to view documentation in the MSDN cloud. If you wish to view documentation when a connection to the Internet is unavailable, you can import documentation sets (books) from the MSDN cloud and install these books to your computer.  You can then switch to Offline Mode to view content on your computer by default.  \r\n<ul>\r\n<li>To import content to your local computer for viewing in offline mode, select \"Install Content from online\" in Help Library Manager. For the DirectX SDK documentation, select the \"Win32 and COM Development\" content title.</li>\r\n<li>To check for updated content in the MSDN cloud that you can import, select \"Check for updates online\" in Help Library Manager.</li>\r\n<li>To remove imported content from your local computer, select \"Remove content\" in Help Library Manager.</li>\r\n</ul>\r\n\r\nIf you import content to your local computer, use Help Library Manager to specify, \"I want to use local help\" to switch to Offline Mode.<br></br>\r\n\r\n<b>Documentation Organization</b><br></br>\r\n\r\nBeginning with the August 2009 DirectX SDK, the Windows Graphics documentation is provided as a separate documentation collection from the main DirectX SDK documentation collection. The Windows graphics documentation collection includes content for Direct3D 9, Direct3D 10.x, Direct3D 11, D3DX, DXGI, and HLSL.<br></br>\r\n\r\n<b>Direct2D Documentation</b><br></br>\r\n\r\nIn the June 2010 release, the Direct2D documentation is incorrectly marked preliminary and subject to change. This is the official, release documentation for Direct2D; this warning can be safely ignored.<br></br>\r\n\r\n<b>Direct3D 11 Runtime</b><br></br>\r\n\r\nTo obtain the Direct3D 11 runtime, please install the release version of Windows 7 or Windows Server 2008 R2. Windows Vista users can follow the procedure described in <a href=\"http://go.microsoft.com/fwlink/?LinkId=160189\">KB 971644</a> (or <a href=\"http://support.microsoft.com/kb/971512/\">KB 971512</a> for corporate network users). For more details, see <b>Direct3D 11 Deployment for Game Developers</b>.<br></br>\r\n\r\n<b>Effects 11</b><br></br>\r\n\r\nThe Effects runtime for Direct3D 11 (FX11) is available as shared source in the DirectX SDK. For more information, please refer to <b>Effects (Direct3D 11)</b> and <b>Effect System Interfaces (Direct3D 11)</b> in the Windows Graphics documentation. The Effects 11 source is now located in the samples directory(Samples\\C++\\Effects11).<br></br>\r\n\r\n<b>DirectX 11 Runtime Symbols</b><br></br>\r\n\r\nThe modern DirectX Runtime is part of the operating system (OS), and symbols for the DirectX components (Direct3D, DirectInput, DirectSound, etc.) are provided as part of the OS symbol packages. DirectX 11 Runtime symbols are included in the Windows 7 and Windows Server 2008 R2 symbols packages available on the Microsoft website. However, we recommend using the Microsoft symbols server instead for the most current and correct set of symbols when debugging DirectX applications.<br></br>\r\n\r\nNote that DirectX 11 Runtime symbols for the down-level <a href=\"http://go.microsoft.com/fwlink/?LinkId=160189\">KB 971644</a> and <a href=\"http://support.microsoft.com/kb/971512/\">KB 971512</a> update for Windows Vista and Windows Server 2008 are not included in the OS offline symbols package. They can be obtained from the Microsoft symbol server.<br></br>\r\n\r\n\r\n<b>The Provided D3D9D.dll for Windows XP is Versioned for Service Pack 2</b><br></br>\r\n\r\nThe D3D9D.dll that is included in the February 2010 and later DirectX SDKs is versioned for Windows XP SP2. If you use this DLL on Windows XP SP3 with an application that uses the Windows Presentation Framework (WPF), the code in the DLL will assert. This issue does not occur on Windows Vista or Windows 7. If you require only debug output, that is, you do not require symbols, you could also use the checked version of D3D9.dll, which is compatible with Windows XP SP3. Just rename the checked D3D9.dll to D3D9D.dll. The checked version of D3D9.dll is available to MSDN subscribers.<br></br>\r\n\r\n\r\n<b>Control Panel for DirectX 9 Debug Output is Specific to 32-bit or 64-bit Applications</b> <br></br>\r\n\r\nIn order to turn DirectX 9 debug output on or off, you must use the DirectX control panel appropriate to the application being debugged. Use the 64-bit DirectX control panel for 64-bit applications and the x86 DirectX control panel for 32-bit applications.<br></br>\r\n                                                               \r\n\r\n<b>D3DCompiler_42.dll and D3DCompiler_43.dll Are in Their Own Cab</b><br></br>\r\n\r\nBeginning in the August 2009 DirectX SDK release, D3DCompiler_*.dll has been moved out of the D3DX CAB to a new CAB: D3DCompiler_*_*.CAB. The D3D_Compiler functionality implements the offline HLSL compiler for D3D 9, 10, or 11. This change decouples the compiler from D3DX. <br></br>\r\n                                                               \r\n\r\n<b>New Warning X3206: Implicit Truncation of Vector Type</b><br></br>\r\n\r\nBeginning in the August 2009 release of the DirectX SDK, the HLSL compiler will warn when an implicit truncation of a vector type occurs. For example, the follow code would elicit the warning.<br></br>\r\n\r\n\r\nfloat4 FastShadow ( float3 vLightPos, float4 vDiffColor ) <br></br>\r\n{<br></br>\r\nfloat2 vLightMax = vLightPos + g_fFilterSize;<br></br>\r\nif ( bTextured ) In.vDiffColor.xyz *= DiffuseTex.Sample ( DiffuseSampler, In.vTCoord );<br></br>\r\n<br></br>\r\n\r\nTo avoid the warning, swizzle out the vector components as shown below.<br></br>\r\n\r\n\r\nfloat4 FastShadow ( float3 vLightPos, float4 vDiffColor ) <br></br>\r\n{<br></br>\r\n float2 vLightMax = vLightPos.xy + g_fFilterSize;<br></br>\r\n if ( bTextured ) In.vDiffColor.xyz *= DiffuseTex.Sample ( DiffuseSampler, In.vTCoord ).xyz;<br></br>\r\n <br></br>\r\n\r\n\r\n\r\n<b>IXACT3Engine::PrepareWave Doesn't Support xWMA</b><br></br>\r\n\r\nIn the March 2008 and later SDKs, the <b>IXACT3Engine::PrepareWave</b> doesn't support xWMA. If you want to use xWMA in XACT, you can prepare those waves by calling one of the following methods:<br></br>\r\n<ul>\r\n <li><b>IXACT3WaveBank::Prepare</b></li>\r\n <li><b>IXACT3SoundBank::Prepare</b></li>\r\n <li><b>IXACT3Engine::PrepareInMemoryWave</b></li>\r\n <li><b>IXACT3Engine::PrepareStreamingWave</b></li>\r\n</ul>     \r\n\r\n\r\n\r\n<b>Symbols for DirectX</b><br></br>\r\n\r\nThe latest and most complete source for debugging symbols is the Microsoft Symbol Server. We recommend using the symbol server rather than using the included partial symbols package. For instructions about using the Microsoft Symbol Server, see <a href=\"http://www.microsoft.com/whdc/devtools/debugging/debugstart.mspx\">http://www.microsoft.com/whdc/devtools/debugging/debugstart.mspx</a>.<br></br>\r\n\r\n<b>Installation Notes for All Platforms</b><br></br>\r\n\r\n<ul>\r\n <li>This SDK is supported on the most recent service packs of the following operating systems: Windows XP, Windows Server 2003, Windows Server 2008, Windows Vista, Windows 7, and Windows Server 2008 R2. This SDK supports Visual Studio 2008 Service Pack 1 and Visual Studio 2010. </li>\r\n <li>Before installing the current DirectX SDK, remove previous versions of the DirectX SDK.</li>\r\n    <li>Use the Samples Browser to install samples included with the DirectX SDK.</li>\r\n <li>Some samples require that you have installed the latest Microsoft Windows SDK on your system.</li>\r\n <li>If you are using Visual Studio and run the Platform SDK Integration tool, all custom include and library paths will be erased for Visual Studio 2008, including those added by the DirectX SDK. To fix the issue, developers need to either reinstall the DirectX SDK or manually add the paths to Visual Studio 2008.</li>\r\n <li>If you encounter compilation issues related to the DirectX headers, make sure that the include directories in Visual Studio 2008 are set correctly. On the Win32 platform, make sure that there is a reference to the DirectX headers. \"$(DXSDK_DIR)include\" should appear in the include directory \"$(VCInstallDir)Include.\" In Visual Studio 2010, this directory should be added on a per-project basis in the VC++ Directories property page in the project properties dialog.</li>\r\n <li>Several virus protection software applications interfere with SDK installation. They may require you to disable virus protection software until SDK installation is completed. </li>\r\n <li>Your system may be corrupted, or cryptographic services may be disabled, if you encounter the following error message during installation: \"A cabinet file is necessary for installation and cannot be trusted.\" To resolve the problem, try the following:<br></br>\r\n  <ol>\r\n   <li>Enable cryptographic services. On the Start menu, right-click <b>My Computer</b>, and then click <b>Manage</b>. The <b>Computer Management</b> window appears. In the left navigation pane, click <b>Services and Applications</b>. In the right pane, double-click <b>Services</b>, and then double-click <b>Cryptographic Services</b>. The <b>Cryptographic Services Properties</b> property sheet appears. On the <b>General</b> tab, ensure that <b>Service Status</b> is Started, and that <b>Startup Type</b> is Automatic. </li>\r\n   <li>If you are running Windows on a FAT32 drive, run scandisk. </li>\r\n   <li>Try the resolution steps in <a href=\"http://support.microsoft.com/default.aspx?scid=kb;en-us;813442\">Detecting digital signing issues in Windows XP</a>.</li>\r\n   <li>Try the resolution steps in <a href=\"http://support.microsoft.com/default.aspx?scid=kb;EN-US;822798\">You cannot install some updates or programs</a>. </li>\r\n   <li>Remove temporary files in the %temp% folder. If you are installing an end-user runtime, also remove \"%windir%\\system32\\directx\\websetup Error.\" </li>\r\n  </ol>\r\n  \r\n </li>\r\n <li>External firewall programs may indicate that the file InstallDeveloperFiles.exe wants to access the Internet. This is by design, and should be enabled.</li>\r\n\r\n\r\n</ul>\r\n\r\n\r\n\r\n",
    "relatedResourcesSection": [
        {
            "title": "where is the DirectX SDK?",
            "url": "https://docs.microsoft.com/en-us/windows/win32/directx-sdk--august-2009-"
        },
        {
            "title": "directX Websetup",
            "url": "http://go.microsoft.com/fwlink/p/?LinkId=159853"
        },
        {
            "title": "directX Redist",
            "url": "http://go.microsoft.com/fwlink/?LinkID=194352"
        },
        {
            "title": "directX Landing Page",
            "url": "https://devblogs.microsoft.com/directx/landing-page/"
        }
    ],
    "locale": "en-us",
    "detailsId": "6812",
    "downloadPreload": true
}